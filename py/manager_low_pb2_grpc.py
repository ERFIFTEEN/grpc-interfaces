# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import cartesi_base_pb2 as cartesi__base__pb2
import manager_low_pb2 as manager__low__pb2


class MachineManagerLowStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CommunicateAddress = channel.unary_unary(
        '/CartesiManagerLow.MachineManagerLow/CommunicateAddress',
        request_serializer=manager__low__pb2.AddressRequest.SerializeToString,
        response_deserializer=cartesi__base__pb2.Void.FromString,
        )


class MachineManagerLowServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CommunicateAddress(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MachineManagerLowServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CommunicateAddress': grpc.unary_unary_rpc_method_handler(
          servicer.CommunicateAddress,
          request_deserializer=manager__low__pb2.AddressRequest.FromString,
          response_serializer=cartesi__base__pb2.Void.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CartesiManagerLow.MachineManagerLow', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
