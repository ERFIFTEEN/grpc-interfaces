// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manager.proto

#include "manager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cartesi_2dbase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RunResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AccessLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_MachineRequest;
}  // namespace protobuf_cartesi_2dbase_2eproto
namespace protobuf_manager_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_manager_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MachineHash;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_manager_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExecutionSummary;
}  // namespace protobuf_manager_2eproto
namespace CartesiManager {
class NewSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewSessionRequest>
      _instance;
} _NewSessionRequest_default_instance_;
class MachineHashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MachineHash>
      _instance;
} _MachineHash_default_instance_;
class SessionRunRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionRunRequest>
      _instance;
} _SessionRunRequest_default_instance_;
class ExecutionSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionSummary>
      _instance;
} _ExecutionSummary_default_instance_;
class SessionRunResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionRunResponse>
      _instance;
} _SessionRunResponse_default_instance_;
class SessionStepRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionStepRequest>
      _instance;
} _SessionStepRequest_default_instance_;
class SessionStepResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionStepResponse>
      _instance;
} _SessionStepResponse_default_instance_;
class ReferenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferenceRequest>
      _instance;
} _ReferenceRequest_default_instance_;
}  // namespace CartesiManager
namespace protobuf_manager_2eproto {
static void InitDefaultsNewSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_NewSessionRequest_default_instance_;
    new (ptr) ::CartesiManager::NewSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::NewSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NewSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNewSessionRequest}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_MachineRequest.base,}};

static void InitDefaultsMachineHash() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_MachineHash_default_instance_;
    new (ptr) ::CartesiManager::MachineHash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::MachineHash::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MachineHash =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachineHash}, {}};

static void InitDefaultsSessionRunRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_SessionRunRequest_default_instance_;
    new (ptr) ::CartesiManager::SessionRunRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::SessionRunRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionRunRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionRunRequest}, {}};

static void InitDefaultsExecutionSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_ExecutionSummary_default_instance_;
    new (ptr) ::CartesiManager::ExecutionSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::ExecutionSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExecutionSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExecutionSummary}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_RunResponse.base,
      &protobuf_manager_2eproto::scc_info_MachineHash.base,}};

static void InitDefaultsSessionRunResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_SessionRunResponse_default_instance_;
    new (ptr) ::CartesiManager::SessionRunResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::SessionRunResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SessionRunResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSessionRunResponse}, {
      &protobuf_manager_2eproto::scc_info_ExecutionSummary.base,}};

static void InitDefaultsSessionStepRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_SessionStepRequest_default_instance_;
    new (ptr) ::CartesiManager::SessionStepRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::SessionStepRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SessionStepRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSessionStepRequest}, {}};

static void InitDefaultsSessionStepResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_SessionStepResponse_default_instance_;
    new (ptr) ::CartesiManager::SessionStepResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::SessionStepResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SessionStepResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSessionStepResponse}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_AccessLog.base,}};

static void InitDefaultsReferenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiManager::_ReferenceRequest_default_instance_;
    new (ptr) ::CartesiManager::ReferenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiManager::ReferenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReferenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReferenceRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NewSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MachineHash.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionRunRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionRunResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionStepRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionStepResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferenceRequest.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::NewSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::NewSessionRequest, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::NewSessionRequest, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::MachineHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::MachineHash, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionRunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionRunRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionRunRequest, times_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ExecutionSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ExecutionSummary, summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ExecutionSummary, machine_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionRunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionRunResponse, executions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionStepRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionStepRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionStepRequest, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionStepResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::SessionStepResponse, log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ReferenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ReferenceRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiManager::ReferenceRequest, address_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CartesiManager::NewSessionRequest)},
  { 7, -1, sizeof(::CartesiManager::MachineHash)},
  { 13, -1, sizeof(::CartesiManager::SessionRunRequest)},
  { 20, -1, sizeof(::CartesiManager::ExecutionSummary)},
  { 27, -1, sizeof(::CartesiManager::SessionRunResponse)},
  { 33, -1, sizeof(::CartesiManager::SessionStepRequest)},
  { 40, -1, sizeof(::CartesiManager::SessionStepResponse)},
  { 46, -1, sizeof(::CartesiManager::ReferenceRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_NewSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_MachineHash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_SessionRunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_ExecutionSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_SessionRunResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_SessionStepRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_SessionStepResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiManager::_ReferenceRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "manager.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmanager.proto\022\016CartesiManager\032\022cartesi"
      "-base.proto\"U\n\021NewSessionRequest\022,\n\007mach"
      "ine\030\001 \001(\0132\033.CartesiCore.MachineRequest\022\022"
      "\n\nsession_id\030\002 \001(\t\"\033\n\013MachineHash\022\014\n\004has"
      "h\030\001 \001(\014\"6\n\021SessionRunRequest\022\022\n\nsession_"
      "id\030\001 \001(\t\022\r\n\005times\030\002 \003(\004\"p\n\020ExecutionSumm"
      "ary\022)\n\007summary\030\001 \001(\0132\030.CartesiCore.RunRe"
      "sponse\0221\n\014machine_hash\030\002 \001(\0132\033.CartesiMa"
      "nager.MachineHash\"J\n\022SessionRunResponse\022"
      "4\n\nexecutions\030\001 \003(\0132 .CartesiManager.Exe"
      "cutionSummary\"6\n\022SessionStepRequest\022\022\n\ns"
      "ession_id\030\001 \001(\t\022\014\n\004time\030\002 \001(\004\":\n\023Session"
      "StepResponse\022#\n\003log\030\001 \001(\0132\026.CartesiCore."
      "AccessLog\"7\n\020ReferenceRequest\022\022\n\nsession"
      "_id\030\001 \001(\t\022\017\n\007address\030\002 \001(\t2\340\002\n\016MachineMa"
      "nager\022N\n\nNewSession\022!.CartesiManager.New"
      "SessionRequest\032\033.CartesiManager.MachineH"
      "ash\"\000\022U\n\nSessionRun\022!.CartesiManager.Ses"
      "sionRunRequest\032\".CartesiManager.SessionR"
      "unResponse\"\000\022X\n\013SessionStep\022\".CartesiMan"
      "ager.SessionStepRequest\032#.CartesiManager"
      ".SessionStepResponse\"\000\022M\n\024CommunicateRef"
      "erence\022 .CartesiManager.ReferenceRequest"
      "\032\021.CartesiCore.Void\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 949);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manager.proto", &protobuf_RegisterTypes);
  ::protobuf_cartesi_2dbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_manager_2eproto
namespace CartesiManager {

// ===================================================================

void NewSessionRequest::InitAsDefaultInstance() {
  ::CartesiManager::_NewSessionRequest_default_instance_._instance.get_mutable()->machine_ = const_cast< ::CartesiCore::MachineRequest*>(
      ::CartesiCore::MachineRequest::internal_default_instance());
}
void NewSessionRequest::clear_machine() {
  if (GetArenaNoVirtual() == NULL && machine_ != NULL) {
    delete machine_;
  }
  machine_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSessionRequest::kMachineFieldNumber;
const int NewSessionRequest::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSessionRequest::NewSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_NewSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.NewSessionRequest)
}
NewSessionRequest::NewSessionRequest(const NewSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_machine()) {
    machine_ = new ::CartesiCore::MachineRequest(*from.machine_);
  } else {
    machine_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.NewSessionRequest)
}

void NewSessionRequest::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_ = NULL;
}

NewSessionRequest::~NewSessionRequest() {
  // @@protoc_insertion_point(destructor:CartesiManager.NewSessionRequest)
  SharedDtor();
}

void NewSessionRequest::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete machine_;
}

void NewSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewSessionRequest::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSessionRequest& NewSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_NewSessionRequest.base);
  return *internal_default_instance();
}


void NewSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.NewSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && machine_ != NULL) {
    delete machine_;
  }
  machine_ = NULL;
  _internal_metadata_.Clear();
}

bool NewSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.NewSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.MachineRequest machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_machine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiManager.NewSessionRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.NewSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.NewSessionRequest)
  return false;
#undef DO_
}

void NewSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.NewSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.MachineRequest machine = 1;
  if (this->has_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_machine(), output);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.NewSessionRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.NewSessionRequest)
}

::google::protobuf::uint8* NewSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.NewSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.MachineRequest machine = 1;
  if (this->has_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_machine(), deterministic, target);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.NewSessionRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.NewSessionRequest)
  return target;
}

size_t NewSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.NewSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // .CartesiCore.MachineRequest machine = 1;
  if (this->has_machine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *machine_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.NewSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.NewSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.NewSessionRequest)
    MergeFrom(*source);
  }
}

void NewSessionRequest::MergeFrom(const NewSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.NewSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_machine()) {
    mutable_machine()->::CartesiCore::MachineRequest::MergeFrom(from.machine());
  }
}

void NewSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.NewSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSessionRequest::CopyFrom(const NewSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.NewSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSessionRequest::IsInitialized() const {
  return true;
}

void NewSessionRequest::Swap(NewSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSessionRequest::InternalSwap(NewSessionRequest* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(machine_, other->machine_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewSessionRequest::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MachineHash::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MachineHash::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MachineHash::MachineHash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_MachineHash.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.MachineHash)
}
MachineHash::MachineHash(const MachineHash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.MachineHash)
}

void MachineHash::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MachineHash::~MachineHash() {
  // @@protoc_insertion_point(destructor:CartesiManager.MachineHash)
  SharedDtor();
}

void MachineHash::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MachineHash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MachineHash::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MachineHash& MachineHash::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_MachineHash.base);
  return *internal_default_instance();
}


void MachineHash::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.MachineHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MachineHash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.MachineHash)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.MachineHash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.MachineHash)
  return false;
#undef DO_
}

void MachineHash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.MachineHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.MachineHash)
}

::google::protobuf::uint8* MachineHash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.MachineHash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.MachineHash)
  return target;
}

size_t MachineHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.MachineHash)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MachineHash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.MachineHash)
  GOOGLE_DCHECK_NE(&from, this);
  const MachineHash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MachineHash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.MachineHash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.MachineHash)
    MergeFrom(*source);
  }
}

void MachineHash::MergeFrom(const MachineHash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.MachineHash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void MachineHash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.MachineHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MachineHash::CopyFrom(const MachineHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.MachineHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MachineHash::IsInitialized() const {
  return true;
}

void MachineHash::Swap(MachineHash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MachineHash::InternalSwap(MachineHash* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MachineHash::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SessionRunRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionRunRequest::kSessionIdFieldNumber;
const int SessionRunRequest::kTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionRunRequest::SessionRunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_SessionRunRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.SessionRunRequest)
}
SessionRunRequest::SessionRunRequest(const SessionRunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      times_(from.times_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.SessionRunRequest)
}

void SessionRunRequest::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SessionRunRequest::~SessionRunRequest() {
  // @@protoc_insertion_point(destructor:CartesiManager.SessionRunRequest)
  SharedDtor();
}

void SessionRunRequest::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SessionRunRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SessionRunRequest::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SessionRunRequest& SessionRunRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_SessionRunRequest.base);
  return *internal_default_instance();
}


void SessionRunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.SessionRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  times_.Clear();
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SessionRunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.SessionRunRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiManager.SessionRunRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 times = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_times())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.SessionRunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.SessionRunRequest)
  return false;
#undef DO_
}

void SessionRunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.SessionRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.SessionRunRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  // repeated uint64 times = 2;
  if (this->times_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _times_cached_byte_size_));
  }
  for (int i = 0, n = this->times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->times(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.SessionRunRequest)
}

::google::protobuf::uint8* SessionRunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.SessionRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.SessionRunRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  // repeated uint64 times = 2;
  if (this->times_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _times_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->times_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.SessionRunRequest)
  return target;
}

size_t SessionRunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.SessionRunRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 times = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->times_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _times_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionRunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.SessionRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionRunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionRunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.SessionRunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.SessionRunRequest)
    MergeFrom(*source);
  }
}

void SessionRunRequest::MergeFrom(const SessionRunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.SessionRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  times_.MergeFrom(from.times_);
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void SessionRunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.SessionRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionRunRequest::CopyFrom(const SessionRunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.SessionRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionRunRequest::IsInitialized() const {
  return true;
}

void SessionRunRequest::Swap(SessionRunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionRunRequest::InternalSwap(SessionRunRequest* other) {
  using std::swap;
  times_.InternalSwap(&other->times_);
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SessionRunRequest::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionSummary::InitAsDefaultInstance() {
  ::CartesiManager::_ExecutionSummary_default_instance_._instance.get_mutable()->summary_ = const_cast< ::CartesiCore::RunResponse*>(
      ::CartesiCore::RunResponse::internal_default_instance());
  ::CartesiManager::_ExecutionSummary_default_instance_._instance.get_mutable()->machine_hash_ = const_cast< ::CartesiManager::MachineHash*>(
      ::CartesiManager::MachineHash::internal_default_instance());
}
void ExecutionSummary::clear_summary() {
  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionSummary::kSummaryFieldNumber;
const int ExecutionSummary::kMachineHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionSummary::ExecutionSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_ExecutionSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.ExecutionSummary)
}
ExecutionSummary::ExecutionSummary(const ExecutionSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_summary()) {
    summary_ = new ::CartesiCore::RunResponse(*from.summary_);
  } else {
    summary_ = NULL;
  }
  if (from.has_machine_hash()) {
    machine_hash_ = new ::CartesiManager::MachineHash(*from.machine_hash_);
  } else {
    machine_hash_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.ExecutionSummary)
}

void ExecutionSummary::SharedCtor() {
  ::memset(&summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machine_hash_) -
      reinterpret_cast<char*>(&summary_)) + sizeof(machine_hash_));
}

ExecutionSummary::~ExecutionSummary() {
  // @@protoc_insertion_point(destructor:CartesiManager.ExecutionSummary)
  SharedDtor();
}

void ExecutionSummary::SharedDtor() {
  if (this != internal_default_instance()) delete summary_;
  if (this != internal_default_instance()) delete machine_hash_;
}

void ExecutionSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecutionSummary::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionSummary& ExecutionSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_ExecutionSummary.base);
  return *internal_default_instance();
}


void ExecutionSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.ExecutionSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && summary_ != NULL) {
    delete summary_;
  }
  summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && machine_hash_ != NULL) {
    delete machine_hash_;
  }
  machine_hash_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecutionSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.ExecutionSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.RunResponse summary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiManager.MachineHash machine_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_machine_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.ExecutionSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.ExecutionSummary)
  return false;
#undef DO_
}

void ExecutionSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.ExecutionSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.RunResponse summary = 1;
  if (this->has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_summary(), output);
  }

  // .CartesiManager.MachineHash machine_hash = 2;
  if (this->has_machine_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_machine_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.ExecutionSummary)
}

::google::protobuf::uint8* ExecutionSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.ExecutionSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.RunResponse summary = 1;
  if (this->has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_summary(), deterministic, target);
  }

  // .CartesiManager.MachineHash machine_hash = 2;
  if (this->has_machine_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_machine_hash(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.ExecutionSummary)
  return target;
}

size_t ExecutionSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.ExecutionSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CartesiCore.RunResponse summary = 1;
  if (this->has_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  // .CartesiManager.MachineHash machine_hash = 2;
  if (this->has_machine_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *machine_hash_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.ExecutionSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.ExecutionSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.ExecutionSummary)
    MergeFrom(*source);
  }
}

void ExecutionSummary::MergeFrom(const ExecutionSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.ExecutionSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_summary()) {
    mutable_summary()->::CartesiCore::RunResponse::MergeFrom(from.summary());
  }
  if (from.has_machine_hash()) {
    mutable_machine_hash()->::CartesiManager::MachineHash::MergeFrom(from.machine_hash());
  }
}

void ExecutionSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.ExecutionSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionSummary::CopyFrom(const ExecutionSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.ExecutionSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionSummary::IsInitialized() const {
  return true;
}

void ExecutionSummary::Swap(ExecutionSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionSummary::InternalSwap(ExecutionSummary* other) {
  using std::swap;
  swap(summary_, other->summary_);
  swap(machine_hash_, other->machine_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecutionSummary::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SessionRunResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionRunResponse::kExecutionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionRunResponse::SessionRunResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_SessionRunResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.SessionRunResponse)
}
SessionRunResponse::SessionRunResponse(const SessionRunResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      executions_(from.executions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CartesiManager.SessionRunResponse)
}

void SessionRunResponse::SharedCtor() {
}

SessionRunResponse::~SessionRunResponse() {
  // @@protoc_insertion_point(destructor:CartesiManager.SessionRunResponse)
  SharedDtor();
}

void SessionRunResponse::SharedDtor() {
}

void SessionRunResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SessionRunResponse::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SessionRunResponse& SessionRunResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_SessionRunResponse.base);
  return *internal_default_instance();
}


void SessionRunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.SessionRunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  executions_.Clear();
  _internal_metadata_.Clear();
}

bool SessionRunResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.SessionRunResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CartesiManager.ExecutionSummary executions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_executions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.SessionRunResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.SessionRunResponse)
  return false;
#undef DO_
}

void SessionRunResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.SessionRunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CartesiManager.ExecutionSummary executions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->executions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.SessionRunResponse)
}

::google::protobuf::uint8* SessionRunResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.SessionRunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CartesiManager.ExecutionSummary executions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->executions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.SessionRunResponse)
  return target;
}

size_t SessionRunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.SessionRunResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CartesiManager.ExecutionSummary executions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->executions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->executions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionRunResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.SessionRunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionRunResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionRunResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.SessionRunResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.SessionRunResponse)
    MergeFrom(*source);
  }
}

void SessionRunResponse::MergeFrom(const SessionRunResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.SessionRunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  executions_.MergeFrom(from.executions_);
}

void SessionRunResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.SessionRunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionRunResponse::CopyFrom(const SessionRunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.SessionRunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionRunResponse::IsInitialized() const {
  return true;
}

void SessionRunResponse::Swap(SessionRunResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionRunResponse::InternalSwap(SessionRunResponse* other) {
  using std::swap;
  CastToBase(&executions_)->InternalSwap(CastToBase(&other->executions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SessionRunResponse::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SessionStepRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionStepRequest::kSessionIdFieldNumber;
const int SessionStepRequest::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionStepRequest::SessionStepRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_SessionStepRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.SessionStepRequest)
}
SessionStepRequest::SessionStepRequest(const SessionStepRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:CartesiManager.SessionStepRequest)
}

void SessionStepRequest::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
}

SessionStepRequest::~SessionStepRequest() {
  // @@protoc_insertion_point(destructor:CartesiManager.SessionStepRequest)
  SharedDtor();
}

void SessionStepRequest::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SessionStepRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SessionStepRequest::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SessionStepRequest& SessionStepRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_SessionStepRequest.base);
  return *internal_default_instance();
}


void SessionStepRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.SessionStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SessionStepRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.SessionStepRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiManager.SessionStepRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.SessionStepRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.SessionStepRequest)
  return false;
#undef DO_
}

void SessionStepRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.SessionStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.SessionStepRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.SessionStepRequest)
}

::google::protobuf::uint8* SessionStepRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.SessionStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.SessionStepRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.SessionStepRequest)
  return target;
}

size_t SessionStepRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.SessionStepRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionStepRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.SessionStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionStepRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionStepRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.SessionStepRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.SessionStepRequest)
    MergeFrom(*source);
  }
}

void SessionStepRequest::MergeFrom(const SessionStepRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.SessionStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void SessionStepRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.SessionStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionStepRequest::CopyFrom(const SessionStepRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.SessionStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionStepRequest::IsInitialized() const {
  return true;
}

void SessionStepRequest::Swap(SessionStepRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionStepRequest::InternalSwap(SessionStepRequest* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SessionStepRequest::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SessionStepResponse::InitAsDefaultInstance() {
  ::CartesiManager::_SessionStepResponse_default_instance_._instance.get_mutable()->log_ = const_cast< ::CartesiCore::AccessLog*>(
      ::CartesiCore::AccessLog::internal_default_instance());
}
void SessionStepResponse::clear_log() {
  if (GetArenaNoVirtual() == NULL && log_ != NULL) {
    delete log_;
  }
  log_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionStepResponse::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionStepResponse::SessionStepResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_SessionStepResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.SessionStepResponse)
}
SessionStepResponse::SessionStepResponse(const SessionStepResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_log()) {
    log_ = new ::CartesiCore::AccessLog(*from.log_);
  } else {
    log_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.SessionStepResponse)
}

void SessionStepResponse::SharedCtor() {
  log_ = NULL;
}

SessionStepResponse::~SessionStepResponse() {
  // @@protoc_insertion_point(destructor:CartesiManager.SessionStepResponse)
  SharedDtor();
}

void SessionStepResponse::SharedDtor() {
  if (this != internal_default_instance()) delete log_;
}

void SessionStepResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SessionStepResponse::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SessionStepResponse& SessionStepResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_SessionStepResponse.base);
  return *internal_default_instance();
}


void SessionStepResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.SessionStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && log_ != NULL) {
    delete log_;
  }
  log_ = NULL;
  _internal_metadata_.Clear();
}

bool SessionStepResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.SessionStepResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.AccessLog log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.SessionStepResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.SessionStepResponse)
  return false;
#undef DO_
}

void SessionStepResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.SessionStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.AccessLog log = 1;
  if (this->has_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_log(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.SessionStepResponse)
}

::google::protobuf::uint8* SessionStepResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.SessionStepResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.AccessLog log = 1;
  if (this->has_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_log(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.SessionStepResponse)
  return target;
}

size_t SessionStepResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.SessionStepResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CartesiCore.AccessLog log = 1;
  if (this->has_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *log_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionStepResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.SessionStepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionStepResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionStepResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.SessionStepResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.SessionStepResponse)
    MergeFrom(*source);
  }
}

void SessionStepResponse::MergeFrom(const SessionStepResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.SessionStepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_log()) {
    mutable_log()->::CartesiCore::AccessLog::MergeFrom(from.log());
  }
}

void SessionStepResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.SessionStepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionStepResponse::CopyFrom(const SessionStepResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.SessionStepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionStepResponse::IsInitialized() const {
  return true;
}

void SessionStepResponse::Swap(SessionStepResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionStepResponse::InternalSwap(SessionStepResponse* other) {
  using std::swap;
  swap(log_, other->log_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SessionStepResponse::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferenceRequest::kSessionIdFieldNumber;
const int ReferenceRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferenceRequest::ReferenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manager_2eproto::scc_info_ReferenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiManager.ReferenceRequest)
}
ReferenceRequest::ReferenceRequest(const ReferenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:CartesiManager.ReferenceRequest)
}

void ReferenceRequest::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReferenceRequest::~ReferenceRequest() {
  // @@protoc_insertion_point(destructor:CartesiManager.ReferenceRequest)
  SharedDtor();
}

void ReferenceRequest::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReferenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferenceRequest::descriptor() {
  ::protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferenceRequest& ReferenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manager_2eproto::scc_info_ReferenceRequest.base);
  return *internal_default_instance();
}


void ReferenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiManager.ReferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReferenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiManager.ReferenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiManager.ReferenceRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiManager.ReferenceRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiManager.ReferenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiManager.ReferenceRequest)
  return false;
#undef DO_
}

void ReferenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiManager.ReferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.ReferenceRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.ReferenceRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiManager.ReferenceRequest)
}

::google::protobuf::uint8* ReferenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiManager.ReferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.ReferenceRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiManager.ReferenceRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiManager.ReferenceRequest)
  return target;
}

size_t ReferenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiManager.ReferenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiManager.ReferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiManager.ReferenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiManager.ReferenceRequest)
    MergeFrom(*source);
  }
}

void ReferenceRequest::MergeFrom(const ReferenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiManager.ReferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void ReferenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiManager.ReferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceRequest::CopyFrom(const ReferenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiManager.ReferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceRequest::IsInitialized() const {
  return true;
}

void ReferenceRequest::Swap(ReferenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferenceRequest::InternalSwap(ReferenceRequest* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferenceRequest::GetMetadata() const {
  protobuf_manager_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manager_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CartesiManager
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::NewSessionRequest* Arena::CreateMaybeMessage< ::CartesiManager::NewSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::NewSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::MachineHash* Arena::CreateMaybeMessage< ::CartesiManager::MachineHash >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::MachineHash >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::SessionRunRequest* Arena::CreateMaybeMessage< ::CartesiManager::SessionRunRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::SessionRunRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::ExecutionSummary* Arena::CreateMaybeMessage< ::CartesiManager::ExecutionSummary >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::ExecutionSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::SessionRunResponse* Arena::CreateMaybeMessage< ::CartesiManager::SessionRunResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::SessionRunResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::SessionStepRequest* Arena::CreateMaybeMessage< ::CartesiManager::SessionStepRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::SessionStepRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::SessionStepResponse* Arena::CreateMaybeMessage< ::CartesiManager::SessionStepResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::SessionStepResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiManager::ReferenceRequest* Arena::CreateMaybeMessage< ::CartesiManager::ReferenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiManager::ReferenceRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
