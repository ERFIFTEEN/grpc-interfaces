// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#include "core.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace CartesiCore {
}  // namespace CartesiCore
namespace protobuf_core_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "core.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ncore.proto\022\013CartesiCore\032\022cartesi-base."
      "proto2\352\003\n\007Machine\022:\n\003Run\022\027.CartesiCore.R"
      "unRequest\032\030.CartesiCore.RunResponse\"\000\022;\n"
      "\007Machine\022\033.CartesiCore.MachineRequest\032\021."
      "CartesiCore.Void\"\000\0222\n\010Snapshot\022\021.Cartesi"
      "Core.Void\032\021.CartesiCore.Void\"\000\0222\n\010Rollba"
      "ck\022\021.CartesiCore.Void\032\021.CartesiCore.Void"
      "\"\000\0222\n\010Shutdown\022\021.CartesiCore.Void\032\021.Cart"
      "esiCore.Void\"\000\022-\n\003Inc\022\021.CartesiCore.Void"
      "\032\021.CartesiCore.Void\"\000\022/\n\005Print\022\021.Cartesi"
      "Core.Void\032\021.CartesiCore.Void\"\000\0223\n\004Step\022\021"
      ".CartesiCore.Void\032\026.CartesiCore.AccessLo"
      "g\"\000\0225\n\013GetRootHash\022\021.CartesiCore.Void\032\021."
      "CartesiCore.Hash\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 546);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "core.proto", &protobuf_RegisterTypes);
  ::protobuf_cartesi_2dbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_core_2eproto
namespace CartesiCore {

// @@protoc_insertion_point(namespace_scope)
}  // namespace CartesiCore
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
