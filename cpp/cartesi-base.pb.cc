// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartesi-base.proto

#include "cartesi-base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cartesi_2dbase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BracketNote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CLINTState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Drive;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HTIFState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hash;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcessorState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RAM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ROM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Access;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CLINT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HTIF;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Processor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cartesi_2dbase_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Proof;
}  // namespace protobuf_cartesi_2dbase_2eproto
namespace CartesiCore {
class VoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Void>
      _instance;
} _Void_default_instance_;
class HashDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hash>
      _instance;
} _Hash_default_instance_;
class ProcessorStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorState>
      _instance;
  ::google::protobuf::uint64 x1_;
  ::google::protobuf::uint64 x2_;
  ::google::protobuf::uint64 x3_;
  ::google::protobuf::uint64 x4_;
  ::google::protobuf::uint64 x5_;
  ::google::protobuf::uint64 x6_;
  ::google::protobuf::uint64 x7_;
  ::google::protobuf::uint64 x8_;
  ::google::protobuf::uint64 x9_;
  ::google::protobuf::uint64 x10_;
  ::google::protobuf::uint64 x11_;
  ::google::protobuf::uint64 x12_;
  ::google::protobuf::uint64 x13_;
  ::google::protobuf::uint64 x14_;
  ::google::protobuf::uint64 x15_;
  ::google::protobuf::uint64 x16_;
  ::google::protobuf::uint64 x17_;
  ::google::protobuf::uint64 x18_;
  ::google::protobuf::uint64 x19_;
  ::google::protobuf::uint64 x20_;
  ::google::protobuf::uint64 x21_;
  ::google::protobuf::uint64 x22_;
  ::google::protobuf::uint64 x23_;
  ::google::protobuf::uint64 x24_;
  ::google::protobuf::uint64 x25_;
  ::google::protobuf::uint64 x26_;
  ::google::protobuf::uint64 x27_;
  ::google::protobuf::uint64 x28_;
  ::google::protobuf::uint64 x29_;
  ::google::protobuf::uint64 x30_;
  ::google::protobuf::uint64 x31_;
  ::google::protobuf::uint64 pc_;
  ::google::protobuf::uint64 mvendorid_;
  ::google::protobuf::uint64 marchid_;
  ::google::protobuf::uint64 mimpid_;
  ::google::protobuf::uint64 mcycle_;
  ::google::protobuf::uint64 minstret_;
  ::google::protobuf::uint64 mstatus_;
  ::google::protobuf::uint64 mtvec_;
  ::google::protobuf::uint64 mscratch_;
  ::google::protobuf::uint64 mepc_;
  ::google::protobuf::uint64 mcause_;
  ::google::protobuf::uint64 mtval_;
  ::google::protobuf::uint64 misa_;
  ::google::protobuf::uint64 mie_;
  ::google::protobuf::uint64 mip_;
  ::google::protobuf::uint64 medeleg_;
  ::google::protobuf::uint64 mideleg_;
  ::google::protobuf::uint64 mcounteren_;
  ::google::protobuf::uint64 stvec_;
  ::google::protobuf::uint64 sscratch_;
  ::google::protobuf::uint64 sepc_;
  ::google::protobuf::uint64 scause_;
  ::google::protobuf::uint64 stval_;
  ::google::protobuf::uint64 satp_;
  ::google::protobuf::uint64 scounteren_;
  ::google::protobuf::uint64 ilrsc_;
  ::google::protobuf::uint64 iflags_;
} _ProcessorState_default_instance_;
class ProcessorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Processor>
      _instance;
  const ::CartesiCore::ProcessorState* state_;
  ::google::protobuf::internal::ArenaStringPtr backing_;
} _Processor_default_instance_;
class ROMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROM>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr cmdline_;
  ::google::protobuf::internal::ArenaStringPtr backing_;
} _ROM_default_instance_;
class RAMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RAM>
      _instance;
} _RAM_default_instance_;
class DriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Drive>
      _instance;
} _Drive_default_instance_;
class CLINTStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLINTState>
      _instance;
} _CLINTState_default_instance_;
class CLINTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLINT>
      _instance;
  const ::CartesiCore::CLINTState* state_;
  ::google::protobuf::internal::ArenaStringPtr backing_;
} _CLINT_default_instance_;
class HTIFStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTIFState>
      _instance;
} _HTIFState_default_instance_;
class HTIFDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTIF>
      _instance;
  const ::CartesiCore::HTIFState* state_;
  ::google::protobuf::internal::ArenaStringPtr backing_;
} _HTIF_default_instance_;
class MachineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MachineRequest>
      _instance;
} _MachineRequest_default_instance_;
class RunRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunRequest>
      _instance;
} _RunRequest_default_instance_;
class RunResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunResponse>
      _instance;
} _RunResponse_default_instance_;
class ProofDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proof>
      _instance;
} _Proof_default_instance_;
class AccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Access>
      _instance;
} _Access_default_instance_;
class BracketNoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BracketNote>
      _instance;
} _BracketNote_default_instance_;
class AccessLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccessLog>
      _instance;
} _AccessLog_default_instance_;
}  // namespace CartesiCore
namespace protobuf_cartesi_2dbase_2eproto {
static void InitDefaultsVoid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Void_default_instance_;
    new (ptr) ::CartesiCore::Void();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Void::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Void =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVoid}, {}};

static void InitDefaultsHash() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Hash_default_instance_;
    new (ptr) ::CartesiCore::Hash();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Hash::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hash =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHash}, {}};

static void InitDefaultsProcessorState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_ProcessorState_default_instance_;
    new (ptr) ::CartesiCore::ProcessorState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::ProcessorState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcessorState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcessorState}, {}};

static void InitDefaultsProcessor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Processor_default_instance_;
    new (ptr) ::CartesiCore::Processor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Processor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Processor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcessor}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_ProcessorState.base,}};

static void InitDefaultsROM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_ROM_default_instance_;
    new (ptr) ::CartesiCore::ROM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::ROM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ROM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsROM}, {}};

static void InitDefaultsRAM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_RAM_default_instance_;
    new (ptr) ::CartesiCore::RAM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::RAM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RAM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRAM}, {}};

static void InitDefaultsDrive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Drive_default_instance_;
    new (ptr) ::CartesiCore::Drive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Drive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Drive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDrive}, {}};

static void InitDefaultsCLINTState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_CLINTState_default_instance_;
    new (ptr) ::CartesiCore::CLINTState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::CLINTState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CLINTState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCLINTState}, {}};

static void InitDefaultsCLINT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_CLINT_default_instance_;
    new (ptr) ::CartesiCore::CLINT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::CLINT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CLINT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCLINT}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_CLINTState.base,}};

static void InitDefaultsHTIFState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_HTIFState_default_instance_;
    new (ptr) ::CartesiCore::HTIFState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::HTIFState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTIFState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHTIFState}, {}};

static void InitDefaultsHTIF() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_HTIF_default_instance_;
    new (ptr) ::CartesiCore::HTIF();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::HTIF::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HTIF =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHTIF}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_HTIFState.base,}};

static void InitDefaultsMachineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_MachineRequest_default_instance_;
    new (ptr) ::CartesiCore::MachineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::MachineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_MachineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsMachineRequest}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_Processor.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_ROM.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_RAM.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_Drive.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_CLINT.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_HTIF.base,}};

static void InitDefaultsRunRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_RunRequest_default_instance_;
    new (ptr) ::CartesiCore::RunRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::RunRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunRequest}, {}};

static void InitDefaultsRunResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_RunResponse_default_instance_;
    new (ptr) ::CartesiCore::RunResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::RunResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RunResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRunResponse}, {}};

static void InitDefaultsProof() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Proof_default_instance_;
    new (ptr) ::CartesiCore::Proof();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Proof::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Proof =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProof}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_Hash.base,}};

static void InitDefaultsAccess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_Access_default_instance_;
    new (ptr) ::CartesiCore::Access();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::Access::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Access =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccess}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_Proof.base,}};

static void InitDefaultsBracketNote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_BracketNote_default_instance_;
    new (ptr) ::CartesiCore::BracketNote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::BracketNote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BracketNote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBracketNote}, {}};

static void InitDefaultsAccessLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CartesiCore::_AccessLog_default_instance_;
    new (ptr) ::CartesiCore::AccessLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CartesiCore::AccessLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AccessLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccessLog}, {
      &protobuf_cartesi_2dbase_2eproto::scc_info_Access.base,
      &protobuf_cartesi_2dbase_2eproto::scc_info_BracketNote.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Void.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hash.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcessorState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Processor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ROM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RAM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Drive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLINTState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLINT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTIFState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTIF.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MachineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RunResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proof.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Access.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BracketNote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccessLog.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Hash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Hash, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x1_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x2_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x3_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x4_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x5_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x6_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x7_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x8_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x9_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x10_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x11_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x12_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x13_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x14_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x15_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x16_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x17_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x18_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x19_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x20_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x21_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x22_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x23_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x24_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x25_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x26_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x27_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x28_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x29_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x30_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, x31_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, pc_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mvendorid_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, marchid_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mimpid_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mcycle_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, minstret_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mstatus_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mtvec_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mscratch_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mepc_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mcause_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mtval_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, misa_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mie_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mip_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, medeleg_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mideleg_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, mcounteren_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, stvec_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, sscratch_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, sepc_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, scause_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, stval_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, satp_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, scounteren_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, ilrsc_),
  offsetof(::CartesiCore::ProcessorStateDefaultTypeInternal, iflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x1_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x2_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x3_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x4_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x5_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x6_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x7_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x8_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x9_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x10_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x11_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x12_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x13_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x14_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x15_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x16_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x17_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x18_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x19_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x20_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x21_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x22_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x23_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x24_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x25_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x26_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x27_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x28_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x29_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x30_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, x31_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, pc_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mvendorid_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, marchid_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mimpid_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mcycle_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, minstret_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mstatus_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mtvec_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mscratch_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mepc_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mcause_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mtval_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, misa_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mie_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mip_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, medeleg_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mideleg_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, mcounteren_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, stvec_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, sscratch_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, sepc_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, scause_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, stval_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, satp_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, scounteren_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, ilrsc_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ProcessorState, iflags_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Processor, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Processor, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CartesiCore::ProcessorDefaultTypeInternal, state_),
  offsetof(::CartesiCore::ProcessorDefaultTypeInternal, backing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Processor, processor_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ROM, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ROM, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CartesiCore::ROMDefaultTypeInternal, cmdline_),
  offsetof(::CartesiCore::ROMDefaultTypeInternal, backing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::ROM, rom_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RAM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RAM, ilength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RAM, backing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, istart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, ilength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, backing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, shared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Drive, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINTState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINTState, mtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINTState, mtimecmp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINT, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINT, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CartesiCore::CLINTDefaultTypeInternal, state_),
  offsetof(::CartesiCore::CLINTDefaultTypeInternal, backing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::CLINT, clint_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIFState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIFState, fromhost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIFState, tohost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIF, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIF, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::CartesiCore::HTIFDefaultTypeInternal, state_),
  offsetof(::CartesiCore::HTIFDefaultTypeInternal, backing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::HTIF, htif_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, processor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, rom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, ram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, flash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, clint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::MachineRequest, htif_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RunRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RunResponse, mcycle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::RunResponse, tohost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, log2_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, target_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, sibling_hashes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Proof, root_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Access, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Access, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Access, read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Access, written_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::Access, proof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::BracketNote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::BracketNote, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::BracketNote, where_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::BracketNote, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::AccessLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::AccessLog, accesses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::AccessLog, brackets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CartesiCore::AccessLog, notes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CartesiCore::Void)},
  { 5, -1, sizeof(::CartesiCore::Hash)},
  { 11, -1, sizeof(::CartesiCore::ProcessorState)},
  { 132, -1, sizeof(::CartesiCore::Processor)},
  { 140, -1, sizeof(::CartesiCore::ROM)},
  { 148, -1, sizeof(::CartesiCore::RAM)},
  { 155, -1, sizeof(::CartesiCore::Drive)},
  { 165, -1, sizeof(::CartesiCore::CLINTState)},
  { 172, -1, sizeof(::CartesiCore::CLINT)},
  { 180, -1, sizeof(::CartesiCore::HTIFState)},
  { 187, -1, sizeof(::CartesiCore::HTIF)},
  { 195, -1, sizeof(::CartesiCore::MachineRequest)},
  { 206, -1, sizeof(::CartesiCore::RunRequest)},
  { 212, -1, sizeof(::CartesiCore::RunResponse)},
  { 219, -1, sizeof(::CartesiCore::Proof)},
  { 229, -1, sizeof(::CartesiCore::Access)},
  { 238, -1, sizeof(::CartesiCore::BracketNote)},
  { 246, -1, sizeof(::CartesiCore::AccessLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Void_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Hash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_ProcessorState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Processor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_ROM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_RAM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Drive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_CLINTState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_CLINT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_HTIFState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_HTIF_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_MachineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_RunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_RunResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Proof_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_Access_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_BracketNote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CartesiCore::_AccessLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cartesi-base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022cartesi-base.proto\022\013CartesiCore\"\006\n\004Voi"
      "d\"\027\n\004Hash\022\017\n\007content\030\001 \001(\014\"\364\r\n\016Processor"
      "State\022\014\n\002x1\030\001 \001(\004H\000\022\014\n\002x2\030\002 \001(\004H\001\022\014\n\002x3\030"
      "\003 \001(\004H\002\022\014\n\002x4\030\004 \001(\004H\003\022\014\n\002x5\030\005 \001(\004H\004\022\014\n\002x"
      "6\030\006 \001(\004H\005\022\014\n\002x7\030\007 \001(\004H\006\022\014\n\002x8\030\010 \001(\004H\007\022\014\n"
      "\002x9\030\t \001(\004H\010\022\r\n\003x10\030\n \001(\004H\t\022\r\n\003x11\030\013 \001(\004H"
      "\n\022\r\n\003x12\030\014 \001(\004H\013\022\r\n\003x13\030\r \001(\004H\014\022\r\n\003x14\030\016"
      " \001(\004H\r\022\r\n\003x15\030\017 \001(\004H\016\022\r\n\003x16\030\020 \001(\004H\017\022\r\n\003"
      "x17\030\021 \001(\004H\020\022\r\n\003x18\030\022 \001(\004H\021\022\r\n\003x19\030\023 \001(\004H"
      "\022\022\r\n\003x20\030\024 \001(\004H\023\022\r\n\003x21\030\025 \001(\004H\024\022\r\n\003x22\030\026"
      " \001(\004H\025\022\r\n\003x23\030\027 \001(\004H\026\022\r\n\003x24\030\030 \001(\004H\027\022\r\n\003"
      "x25\030\031 \001(\004H\030\022\r\n\003x26\030\032 \001(\004H\031\022\r\n\003x27\030\033 \001(\004H"
      "\032\022\r\n\003x28\030\034 \001(\004H\033\022\r\n\003x29\030\035 \001(\004H\034\022\r\n\003x30\030\036"
      " \001(\004H\035\022\r\n\003x31\030\037 \001(\004H\036\022\014\n\002pc\030  \001(\004H\037\022\023\n\tm"
      "vendorid\030! \001(\004H \022\021\n\007marchid\030\" \001(\004H!\022\020\n\006m"
      "impid\030# \001(\004H\"\022\020\n\006mcycle\030$ \001(\004H#\022\022\n\010minst"
      "ret\030% \001(\004H$\022\021\n\007mstatus\030& \001(\004H%\022\017\n\005mtvec\030"
      "\' \001(\004H&\022\022\n\010mscratch\030( \001(\004H\'\022\016\n\004mepc\030) \001("
      "\004H(\022\020\n\006mcause\030* \001(\004H)\022\017\n\005mtval\030+ \001(\004H*\022\016"
      "\n\004misa\030, \001(\004H+\022\r\n\003mie\030- \001(\004H,\022\r\n\003mip\030. \001"
      "(\004H-\022\021\n\007medeleg\030/ \001(\004H.\022\021\n\007mideleg\0300 \001(\004"
      "H/\022\024\n\nmcounteren\0301 \001(\004H0\022\017\n\005stvec\0302 \001(\004H"
      "1\022\022\n\010sscratch\0303 \001(\004H2\022\016\n\004sepc\0304 \001(\004H3\022\020\n"
      "\006scause\0305 \001(\004H4\022\017\n\005stval\0306 \001(\004H5\022\016\n\004satp"
      "\0307 \001(\004H6\022\024\n\nscounteren\0308 \001(\004H7\022\017\n\005ilrsc\030"
      "9 \001(\004H8\022\020\n\006iflags\030: \001(\004H9B\n\n\010x1_oneofB\n\n"
      "\010x2_oneofB\n\n\010x3_oneofB\n\n\010x4_oneofB\n\n\010x5_"
      "oneofB\n\n\010x6_oneofB\n\n\010x7_oneofB\n\n\010x8_oneo"
      "fB\n\n\010x9_oneofB\013\n\tx10_oneofB\013\n\tx11_oneofB"
      "\013\n\tx12_oneofB\013\n\tx13_oneofB\013\n\tx14_oneofB\013"
      "\n\tx15_oneofB\013\n\tx16_oneofB\013\n\tx17_oneofB\013\n"
      "\tx18_oneofB\013\n\tx19_oneofB\013\n\tx20_oneofB\013\n\t"
      "x21_oneofB\013\n\tx22_oneofB\013\n\tx23_oneofB\013\n\tx"
      "24_oneofB\013\n\tx25_oneofB\013\n\tx26_oneofB\013\n\tx2"
      "7_oneofB\013\n\tx28_oneofB\013\n\tx29_oneofB\013\n\tx30"
      "_oneofB\013\n\tx31_oneofB\n\n\010pc_oneofB\021\n\017mvend"
      "orid_oneofB\017\n\rmarchid_oneofB\016\n\014mimpid_on"
      "eofB\016\n\014mcycle_oneofB\020\n\016minstret_oneofB\017\n"
      "\rmstatus_oneofB\r\n\013mtvec_oneofB\020\n\016mscratc"
      "h_oneofB\014\n\nmepc_oneofB\016\n\014mcause_oneofB\r\n"
      "\013mtval_oneofB\014\n\nmisa_oneofB\013\n\tmie_oneofB"
      "\013\n\tmip_oneofB\017\n\rmedeleg_oneofB\017\n\rmideleg"
      "_oneofB\022\n\020mcounteren_oneofB\r\n\013stvec_oneo"
      "fB\020\n\016sscratch_oneofB\014\n\nsepc_oneofB\016\n\014sca"
      "use_oneofB\r\n\013stval_oneofB\014\n\nsatp_oneofB\022"
      "\n\020scounteren_oneofB\r\n\013ilrsc_oneofB\016\n\014ifl"
      "ags_oneof\"_\n\tProcessor\022,\n\005state\030\001 \001(\0132\033."
      "CartesiCore.ProcessorStateH\000\022\021\n\007backing\030"
      "\002 \001(\tH\000B\021\n\017processor_oneof\"8\n\003ROM\022\021\n\007cmd"
      "line\030\001 \001(\tH\000\022\021\n\007backing\030\002 \001(\tH\000B\013\n\trom_o"
      "neof\"\'\n\003RAM\022\017\n\007ilength\030\001 \001(\004\022\017\n\007backing\030"
      "\002 \001(\t\"X\n\005Drive\022\016\n\006istart\030\001 \001(\004\022\017\n\007ilengt"
      "h\030\002 \001(\004\022\017\n\007backing\030\003 \001(\t\022\016\n\006shared\030\004 \001(\010"
      "\022\r\n\005label\030\005 \001(\t\"-\n\nCLINTState\022\r\n\005mtime\030\001"
      " \001(\004\022\020\n\010mtimecmp\030\002 \001(\004\"S\n\005CLINT\022(\n\005state"
      "\030\001 \001(\0132\027.CartesiCore.CLINTStateH\000\022\021\n\007bac"
      "king\030\002 \001(\tH\000B\r\n\013clint_oneof\"-\n\tHTIFState"
      "\022\020\n\010fromhost\030\001 \001(\004\022\016\n\006tohost\030\002 \001(\004\"P\n\004HT"
      "IF\022\'\n\005state\030\001 \001(\0132\026.CartesiCore.HTIFStat"
      "eH\000\022\021\n\007backing\030\002 \001(\tH\000B\014\n\nhtif_oneof\"\340\001\n"
      "\016MachineRequest\022)\n\tprocessor\030\001 \001(\0132\026.Car"
      "tesiCore.Processor\022\035\n\003rom\030\002 \001(\0132\020.Cartes"
      "iCore.ROM\022\035\n\003ram\030\003 \001(\0132\020.CartesiCore.RAM"
      "\022!\n\005flash\030\004 \003(\0132\022.CartesiCore.Drive\022!\n\005c"
      "lint\030\005 \001(\0132\022.CartesiCore.CLINT\022\037\n\004htif\030\006"
      " \001(\0132\021.CartesiCore.HTIF\"\033\n\nRunRequest\022\r\n"
      "\005limit\030\001 \001(\004\"-\n\013RunResponse\022\016\n\006mcycle\030\001 "
      "\001(\004\022\016\n\006tohost\030\002 \001(\004\"\244\001\n\005Proof\022\017\n\007address"
      "\030\001 \001(\004\022\021\n\tlog2_size\030\002 \001(\r\022&\n\013target_hash"
      "\030\003 \001(\0132\021.CartesiCore.Hash\022)\n\016sibling_has"
      "hes\030\004 \003(\0132\021.CartesiCore.Hash\022$\n\troot_has"
      "h\030\005 \001(\0132\021.CartesiCore.Hash\"{\n\006Access\022/\n\t"
      "operation\030\001 \001(\0162\034.CartesiCore.AccessOper"
      "ation\022\014\n\004read\030\002 \001(\004\022\017\n\007written\030\003 \001(\004\022!\n\005"
      "proof\030\004 \001(\0132\022.CartesiCore.Proof\"\241\001\n\013Brac"
      "ketNote\0226\n\004type\030\001 \001(\0162(.CartesiCore.Brac"
      "ketNote.BracketNoteType\022\r\n\005where\030\002 \001(\004\022\014"
      "\n\004text\030\003 \001(\t\"=\n\017BracketNoteType\022\t\n\005DUMMY"
      "\020\000\022\t\n\005BEGIN\020\001\022\007\n\003END\020\002\022\013\n\007INVALID\020\003\"m\n\tA"
      "ccessLog\022%\n\010accesses\030\001 \003(\0132\023.CartesiCore"
      ".Access\022*\n\010brackets\030\002 \003(\0132\030.CartesiCore."
      "BracketNote\022\r\n\005notes\030\003 \003(\t*&\n\017AccessOper"
      "ation\022\010\n\004READ\020\000\022\t\n\005WRITE\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3314);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cartesi-base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cartesi_2dbase_2eproto
namespace CartesiCore {
const ::google::protobuf::EnumDescriptor* BracketNote_BracketNoteType_descriptor() {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cartesi_2dbase_2eproto::file_level_enum_descriptors[0];
}
bool BracketNote_BracketNoteType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BracketNote_BracketNoteType BracketNote::DUMMY;
const BracketNote_BracketNoteType BracketNote::BEGIN;
const BracketNote_BracketNoteType BracketNote::END;
const BracketNote_BracketNoteType BracketNote::INVALID;
const BracketNote_BracketNoteType BracketNote::BracketNoteType_MIN;
const BracketNote_BracketNoteType BracketNote::BracketNoteType_MAX;
const int BracketNote::BracketNoteType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AccessOperation_descriptor() {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cartesi_2dbase_2eproto::file_level_enum_descriptors[1];
}
bool AccessOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Void::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Void::Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Void.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Void)
}
Void::Void(const Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Void)
}

void Void::SharedCtor() {
}

Void::~Void() {
  // @@protoc_insertion_point(destructor:CartesiCore.Void)
  SharedDtor();
}

void Void::SharedDtor() {
}

void Void::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Void::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Void& Void::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Void.base);
  return *internal_default_instance();
}


void Void::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Void)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Void)
  return false;
#undef DO_
}

void Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Void)
}

::google::protobuf::uint8* Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Void)
  return target;
}

size_t Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Void)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Void)
    MergeFrom(*source);
  }
}

void Void::MergeFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Void::CopyFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Void::IsInitialized() const {
  return true;
}

void Void::Swap(Void* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Void::InternalSwap(Void* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Void::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hash::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash::Hash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Hash.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Hash)
}
Hash::Hash(const Hash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Hash)
}

void Hash::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Hash::~Hash() {
  // @@protoc_insertion_point(destructor:CartesiCore.Hash)
  SharedDtor();
}

void Hash::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hash::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hash& Hash::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Hash.base);
  return *internal_default_instance();
}


void Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Hash::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Hash)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Hash)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Hash)
  return false;
#undef DO_
}

void Hash::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Hash)
}

::google::protobuf::uint8* Hash::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Hash)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Hash)
  return target;
}

size_t Hash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Hash)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hash::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  const Hash* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Hash)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Hash)
    MergeFrom(*source);
  }
}

void Hash::MergeFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Hash::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash::CopyFrom(const Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash::IsInitialized() const {
  return true;
}

void Hash::Swap(Hash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash::InternalSwap(Hash* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hash::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorState::InitAsDefaultInstance() {
  ::CartesiCore::_ProcessorState_default_instance_.x1_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x2_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x3_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x4_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x5_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x6_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x7_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x8_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x9_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x10_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x11_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x12_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x13_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x14_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x15_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x16_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x17_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x18_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x19_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x20_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x21_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x22_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x23_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x24_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x25_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x26_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x27_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x28_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x29_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x30_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.x31_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.pc_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mvendorid_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.marchid_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mimpid_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mcycle_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.minstret_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mstatus_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mtvec_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mscratch_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mepc_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mcause_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mtval_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.misa_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mie_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mip_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.medeleg_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mideleg_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.mcounteren_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.stvec_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.sscratch_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.sepc_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.scause_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.stval_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.satp_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.scounteren_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.ilrsc_ = GOOGLE_ULONGLONG(0);
  ::CartesiCore::_ProcessorState_default_instance_.iflags_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorState::kX1FieldNumber;
const int ProcessorState::kX2FieldNumber;
const int ProcessorState::kX3FieldNumber;
const int ProcessorState::kX4FieldNumber;
const int ProcessorState::kX5FieldNumber;
const int ProcessorState::kX6FieldNumber;
const int ProcessorState::kX7FieldNumber;
const int ProcessorState::kX8FieldNumber;
const int ProcessorState::kX9FieldNumber;
const int ProcessorState::kX10FieldNumber;
const int ProcessorState::kX11FieldNumber;
const int ProcessorState::kX12FieldNumber;
const int ProcessorState::kX13FieldNumber;
const int ProcessorState::kX14FieldNumber;
const int ProcessorState::kX15FieldNumber;
const int ProcessorState::kX16FieldNumber;
const int ProcessorState::kX17FieldNumber;
const int ProcessorState::kX18FieldNumber;
const int ProcessorState::kX19FieldNumber;
const int ProcessorState::kX20FieldNumber;
const int ProcessorState::kX21FieldNumber;
const int ProcessorState::kX22FieldNumber;
const int ProcessorState::kX23FieldNumber;
const int ProcessorState::kX24FieldNumber;
const int ProcessorState::kX25FieldNumber;
const int ProcessorState::kX26FieldNumber;
const int ProcessorState::kX27FieldNumber;
const int ProcessorState::kX28FieldNumber;
const int ProcessorState::kX29FieldNumber;
const int ProcessorState::kX30FieldNumber;
const int ProcessorState::kX31FieldNumber;
const int ProcessorState::kPcFieldNumber;
const int ProcessorState::kMvendoridFieldNumber;
const int ProcessorState::kMarchidFieldNumber;
const int ProcessorState::kMimpidFieldNumber;
const int ProcessorState::kMcycleFieldNumber;
const int ProcessorState::kMinstretFieldNumber;
const int ProcessorState::kMstatusFieldNumber;
const int ProcessorState::kMtvecFieldNumber;
const int ProcessorState::kMscratchFieldNumber;
const int ProcessorState::kMepcFieldNumber;
const int ProcessorState::kMcauseFieldNumber;
const int ProcessorState::kMtvalFieldNumber;
const int ProcessorState::kMisaFieldNumber;
const int ProcessorState::kMieFieldNumber;
const int ProcessorState::kMipFieldNumber;
const int ProcessorState::kMedelegFieldNumber;
const int ProcessorState::kMidelegFieldNumber;
const int ProcessorState::kMcounterenFieldNumber;
const int ProcessorState::kStvecFieldNumber;
const int ProcessorState::kSscratchFieldNumber;
const int ProcessorState::kSepcFieldNumber;
const int ProcessorState::kScauseFieldNumber;
const int ProcessorState::kStvalFieldNumber;
const int ProcessorState::kSatpFieldNumber;
const int ProcessorState::kScounterenFieldNumber;
const int ProcessorState::kIlrscFieldNumber;
const int ProcessorState::kIflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorState::ProcessorState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_ProcessorState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.ProcessorState)
}
ProcessorState::ProcessorState(const ProcessorState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_x1_oneof();
  switch (from.x1_oneof_case()) {
    case kX1: {
      set_x1(from.x1());
      break;
    }
    case X1_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x2_oneof();
  switch (from.x2_oneof_case()) {
    case kX2: {
      set_x2(from.x2());
      break;
    }
    case X2_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x3_oneof();
  switch (from.x3_oneof_case()) {
    case kX3: {
      set_x3(from.x3());
      break;
    }
    case X3_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x4_oneof();
  switch (from.x4_oneof_case()) {
    case kX4: {
      set_x4(from.x4());
      break;
    }
    case X4_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x5_oneof();
  switch (from.x5_oneof_case()) {
    case kX5: {
      set_x5(from.x5());
      break;
    }
    case X5_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x6_oneof();
  switch (from.x6_oneof_case()) {
    case kX6: {
      set_x6(from.x6());
      break;
    }
    case X6_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x7_oneof();
  switch (from.x7_oneof_case()) {
    case kX7: {
      set_x7(from.x7());
      break;
    }
    case X7_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x8_oneof();
  switch (from.x8_oneof_case()) {
    case kX8: {
      set_x8(from.x8());
      break;
    }
    case X8_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x9_oneof();
  switch (from.x9_oneof_case()) {
    case kX9: {
      set_x9(from.x9());
      break;
    }
    case X9_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x10_oneof();
  switch (from.x10_oneof_case()) {
    case kX10: {
      set_x10(from.x10());
      break;
    }
    case X10_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x11_oneof();
  switch (from.x11_oneof_case()) {
    case kX11: {
      set_x11(from.x11());
      break;
    }
    case X11_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x12_oneof();
  switch (from.x12_oneof_case()) {
    case kX12: {
      set_x12(from.x12());
      break;
    }
    case X12_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x13_oneof();
  switch (from.x13_oneof_case()) {
    case kX13: {
      set_x13(from.x13());
      break;
    }
    case X13_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x14_oneof();
  switch (from.x14_oneof_case()) {
    case kX14: {
      set_x14(from.x14());
      break;
    }
    case X14_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x15_oneof();
  switch (from.x15_oneof_case()) {
    case kX15: {
      set_x15(from.x15());
      break;
    }
    case X15_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x16_oneof();
  switch (from.x16_oneof_case()) {
    case kX16: {
      set_x16(from.x16());
      break;
    }
    case X16_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x17_oneof();
  switch (from.x17_oneof_case()) {
    case kX17: {
      set_x17(from.x17());
      break;
    }
    case X17_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x18_oneof();
  switch (from.x18_oneof_case()) {
    case kX18: {
      set_x18(from.x18());
      break;
    }
    case X18_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x19_oneof();
  switch (from.x19_oneof_case()) {
    case kX19: {
      set_x19(from.x19());
      break;
    }
    case X19_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x20_oneof();
  switch (from.x20_oneof_case()) {
    case kX20: {
      set_x20(from.x20());
      break;
    }
    case X20_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x21_oneof();
  switch (from.x21_oneof_case()) {
    case kX21: {
      set_x21(from.x21());
      break;
    }
    case X21_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x22_oneof();
  switch (from.x22_oneof_case()) {
    case kX22: {
      set_x22(from.x22());
      break;
    }
    case X22_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x23_oneof();
  switch (from.x23_oneof_case()) {
    case kX23: {
      set_x23(from.x23());
      break;
    }
    case X23_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x24_oneof();
  switch (from.x24_oneof_case()) {
    case kX24: {
      set_x24(from.x24());
      break;
    }
    case X24_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x25_oneof();
  switch (from.x25_oneof_case()) {
    case kX25: {
      set_x25(from.x25());
      break;
    }
    case X25_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x26_oneof();
  switch (from.x26_oneof_case()) {
    case kX26: {
      set_x26(from.x26());
      break;
    }
    case X26_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x27_oneof();
  switch (from.x27_oneof_case()) {
    case kX27: {
      set_x27(from.x27());
      break;
    }
    case X27_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x28_oneof();
  switch (from.x28_oneof_case()) {
    case kX28: {
      set_x28(from.x28());
      break;
    }
    case X28_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x29_oneof();
  switch (from.x29_oneof_case()) {
    case kX29: {
      set_x29(from.x29());
      break;
    }
    case X29_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x30_oneof();
  switch (from.x30_oneof_case()) {
    case kX30: {
      set_x30(from.x30());
      break;
    }
    case X30_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_x31_oneof();
  switch (from.x31_oneof_case()) {
    case kX31: {
      set_x31(from.x31());
      break;
    }
    case X31_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_pc_oneof();
  switch (from.pc_oneof_case()) {
    case kPc: {
      set_pc(from.pc());
      break;
    }
    case PC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mvendorid_oneof();
  switch (from.mvendorid_oneof_case()) {
    case kMvendorid: {
      set_mvendorid(from.mvendorid());
      break;
    }
    case MVENDORID_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_marchid_oneof();
  switch (from.marchid_oneof_case()) {
    case kMarchid: {
      set_marchid(from.marchid());
      break;
    }
    case MARCHID_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mimpid_oneof();
  switch (from.mimpid_oneof_case()) {
    case kMimpid: {
      set_mimpid(from.mimpid());
      break;
    }
    case MIMPID_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mcycle_oneof();
  switch (from.mcycle_oneof_case()) {
    case kMcycle: {
      set_mcycle(from.mcycle());
      break;
    }
    case MCYCLE_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_minstret_oneof();
  switch (from.minstret_oneof_case()) {
    case kMinstret: {
      set_minstret(from.minstret());
      break;
    }
    case MINSTRET_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mstatus_oneof();
  switch (from.mstatus_oneof_case()) {
    case kMstatus: {
      set_mstatus(from.mstatus());
      break;
    }
    case MSTATUS_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mtvec_oneof();
  switch (from.mtvec_oneof_case()) {
    case kMtvec: {
      set_mtvec(from.mtvec());
      break;
    }
    case MTVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mscratch_oneof();
  switch (from.mscratch_oneof_case()) {
    case kMscratch: {
      set_mscratch(from.mscratch());
      break;
    }
    case MSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mepc_oneof();
  switch (from.mepc_oneof_case()) {
    case kMepc: {
      set_mepc(from.mepc());
      break;
    }
    case MEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mcause_oneof();
  switch (from.mcause_oneof_case()) {
    case kMcause: {
      set_mcause(from.mcause());
      break;
    }
    case MCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mtval_oneof();
  switch (from.mtval_oneof_case()) {
    case kMtval: {
      set_mtval(from.mtval());
      break;
    }
    case MTVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_misa_oneof();
  switch (from.misa_oneof_case()) {
    case kMisa: {
      set_misa(from.misa());
      break;
    }
    case MISA_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mie_oneof();
  switch (from.mie_oneof_case()) {
    case kMie: {
      set_mie(from.mie());
      break;
    }
    case MIE_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mip_oneof();
  switch (from.mip_oneof_case()) {
    case kMip: {
      set_mip(from.mip());
      break;
    }
    case MIP_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_medeleg_oneof();
  switch (from.medeleg_oneof_case()) {
    case kMedeleg: {
      set_medeleg(from.medeleg());
      break;
    }
    case MEDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mideleg_oneof();
  switch (from.mideleg_oneof_case()) {
    case kMideleg: {
      set_mideleg(from.mideleg());
      break;
    }
    case MIDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_mcounteren_oneof();
  switch (from.mcounteren_oneof_case()) {
    case kMcounteren: {
      set_mcounteren(from.mcounteren());
      break;
    }
    case MCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_stvec_oneof();
  switch (from.stvec_oneof_case()) {
    case kStvec: {
      set_stvec(from.stvec());
      break;
    }
    case STVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_sscratch_oneof();
  switch (from.sscratch_oneof_case()) {
    case kSscratch: {
      set_sscratch(from.sscratch());
      break;
    }
    case SSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_sepc_oneof();
  switch (from.sepc_oneof_case()) {
    case kSepc: {
      set_sepc(from.sepc());
      break;
    }
    case SEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_scause_oneof();
  switch (from.scause_oneof_case()) {
    case kScause: {
      set_scause(from.scause());
      break;
    }
    case SCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_stval_oneof();
  switch (from.stval_oneof_case()) {
    case kStval: {
      set_stval(from.stval());
      break;
    }
    case STVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_satp_oneof();
  switch (from.satp_oneof_case()) {
    case kSatp: {
      set_satp(from.satp());
      break;
    }
    case SATP_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_scounteren_oneof();
  switch (from.scounteren_oneof_case()) {
    case kScounteren: {
      set_scounteren(from.scounteren());
      break;
    }
    case SCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_ilrsc_oneof();
  switch (from.ilrsc_oneof_case()) {
    case kIlrsc: {
      set_ilrsc(from.ilrsc());
      break;
    }
    case ILRSC_ONEOF_NOT_SET: {
      break;
    }
  }
  clear_has_iflags_oneof();
  switch (from.iflags_oneof_case()) {
    case kIflags: {
      set_iflags(from.iflags());
      break;
    }
    case IFLAGS_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.ProcessorState)
}

void ProcessorState::SharedCtor() {
  clear_has_x1_oneof();
  clear_has_x2_oneof();
  clear_has_x3_oneof();
  clear_has_x4_oneof();
  clear_has_x5_oneof();
  clear_has_x6_oneof();
  clear_has_x7_oneof();
  clear_has_x8_oneof();
  clear_has_x9_oneof();
  clear_has_x10_oneof();
  clear_has_x11_oneof();
  clear_has_x12_oneof();
  clear_has_x13_oneof();
  clear_has_x14_oneof();
  clear_has_x15_oneof();
  clear_has_x16_oneof();
  clear_has_x17_oneof();
  clear_has_x18_oneof();
  clear_has_x19_oneof();
  clear_has_x20_oneof();
  clear_has_x21_oneof();
  clear_has_x22_oneof();
  clear_has_x23_oneof();
  clear_has_x24_oneof();
  clear_has_x25_oneof();
  clear_has_x26_oneof();
  clear_has_x27_oneof();
  clear_has_x28_oneof();
  clear_has_x29_oneof();
  clear_has_x30_oneof();
  clear_has_x31_oneof();
  clear_has_pc_oneof();
  clear_has_mvendorid_oneof();
  clear_has_marchid_oneof();
  clear_has_mimpid_oneof();
  clear_has_mcycle_oneof();
  clear_has_minstret_oneof();
  clear_has_mstatus_oneof();
  clear_has_mtvec_oneof();
  clear_has_mscratch_oneof();
  clear_has_mepc_oneof();
  clear_has_mcause_oneof();
  clear_has_mtval_oneof();
  clear_has_misa_oneof();
  clear_has_mie_oneof();
  clear_has_mip_oneof();
  clear_has_medeleg_oneof();
  clear_has_mideleg_oneof();
  clear_has_mcounteren_oneof();
  clear_has_stvec_oneof();
  clear_has_sscratch_oneof();
  clear_has_sepc_oneof();
  clear_has_scause_oneof();
  clear_has_stval_oneof();
  clear_has_satp_oneof();
  clear_has_scounteren_oneof();
  clear_has_ilrsc_oneof();
  clear_has_iflags_oneof();
}

ProcessorState::~ProcessorState() {
  // @@protoc_insertion_point(destructor:CartesiCore.ProcessorState)
  SharedDtor();
}

void ProcessorState::SharedDtor() {
  if (has_x1_oneof()) {
    clear_x1_oneof();
  }
  if (has_x2_oneof()) {
    clear_x2_oneof();
  }
  if (has_x3_oneof()) {
    clear_x3_oneof();
  }
  if (has_x4_oneof()) {
    clear_x4_oneof();
  }
  if (has_x5_oneof()) {
    clear_x5_oneof();
  }
  if (has_x6_oneof()) {
    clear_x6_oneof();
  }
  if (has_x7_oneof()) {
    clear_x7_oneof();
  }
  if (has_x8_oneof()) {
    clear_x8_oneof();
  }
  if (has_x9_oneof()) {
    clear_x9_oneof();
  }
  if (has_x10_oneof()) {
    clear_x10_oneof();
  }
  if (has_x11_oneof()) {
    clear_x11_oneof();
  }
  if (has_x12_oneof()) {
    clear_x12_oneof();
  }
  if (has_x13_oneof()) {
    clear_x13_oneof();
  }
  if (has_x14_oneof()) {
    clear_x14_oneof();
  }
  if (has_x15_oneof()) {
    clear_x15_oneof();
  }
  if (has_x16_oneof()) {
    clear_x16_oneof();
  }
  if (has_x17_oneof()) {
    clear_x17_oneof();
  }
  if (has_x18_oneof()) {
    clear_x18_oneof();
  }
  if (has_x19_oneof()) {
    clear_x19_oneof();
  }
  if (has_x20_oneof()) {
    clear_x20_oneof();
  }
  if (has_x21_oneof()) {
    clear_x21_oneof();
  }
  if (has_x22_oneof()) {
    clear_x22_oneof();
  }
  if (has_x23_oneof()) {
    clear_x23_oneof();
  }
  if (has_x24_oneof()) {
    clear_x24_oneof();
  }
  if (has_x25_oneof()) {
    clear_x25_oneof();
  }
  if (has_x26_oneof()) {
    clear_x26_oneof();
  }
  if (has_x27_oneof()) {
    clear_x27_oneof();
  }
  if (has_x28_oneof()) {
    clear_x28_oneof();
  }
  if (has_x29_oneof()) {
    clear_x29_oneof();
  }
  if (has_x30_oneof()) {
    clear_x30_oneof();
  }
  if (has_x31_oneof()) {
    clear_x31_oneof();
  }
  if (has_pc_oneof()) {
    clear_pc_oneof();
  }
  if (has_mvendorid_oneof()) {
    clear_mvendorid_oneof();
  }
  if (has_marchid_oneof()) {
    clear_marchid_oneof();
  }
  if (has_mimpid_oneof()) {
    clear_mimpid_oneof();
  }
  if (has_mcycle_oneof()) {
    clear_mcycle_oneof();
  }
  if (has_minstret_oneof()) {
    clear_minstret_oneof();
  }
  if (has_mstatus_oneof()) {
    clear_mstatus_oneof();
  }
  if (has_mtvec_oneof()) {
    clear_mtvec_oneof();
  }
  if (has_mscratch_oneof()) {
    clear_mscratch_oneof();
  }
  if (has_mepc_oneof()) {
    clear_mepc_oneof();
  }
  if (has_mcause_oneof()) {
    clear_mcause_oneof();
  }
  if (has_mtval_oneof()) {
    clear_mtval_oneof();
  }
  if (has_misa_oneof()) {
    clear_misa_oneof();
  }
  if (has_mie_oneof()) {
    clear_mie_oneof();
  }
  if (has_mip_oneof()) {
    clear_mip_oneof();
  }
  if (has_medeleg_oneof()) {
    clear_medeleg_oneof();
  }
  if (has_mideleg_oneof()) {
    clear_mideleg_oneof();
  }
  if (has_mcounteren_oneof()) {
    clear_mcounteren_oneof();
  }
  if (has_stvec_oneof()) {
    clear_stvec_oneof();
  }
  if (has_sscratch_oneof()) {
    clear_sscratch_oneof();
  }
  if (has_sepc_oneof()) {
    clear_sepc_oneof();
  }
  if (has_scause_oneof()) {
    clear_scause_oneof();
  }
  if (has_stval_oneof()) {
    clear_stval_oneof();
  }
  if (has_satp_oneof()) {
    clear_satp_oneof();
  }
  if (has_scounteren_oneof()) {
    clear_scounteren_oneof();
  }
  if (has_ilrsc_oneof()) {
    clear_ilrsc_oneof();
  }
  if (has_iflags_oneof()) {
    clear_iflags_oneof();
  }
}

void ProcessorState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcessorState::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorState& ProcessorState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_ProcessorState.base);
  return *internal_default_instance();
}


void ProcessorState::clear_x1_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x1_oneof_case()) {
    case kX1: {
      // No need to clear
      break;
    }
    case X1_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = X1_ONEOF_NOT_SET;
}

void ProcessorState::clear_x2_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x2_oneof_case()) {
    case kX2: {
      // No need to clear
      break;
    }
    case X2_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = X2_ONEOF_NOT_SET;
}

void ProcessorState::clear_x3_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x3_oneof_case()) {
    case kX3: {
      // No need to clear
      break;
    }
    case X3_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = X3_ONEOF_NOT_SET;
}

void ProcessorState::clear_x4_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x4_oneof_case()) {
    case kX4: {
      // No need to clear
      break;
    }
    case X4_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[3] = X4_ONEOF_NOT_SET;
}

void ProcessorState::clear_x5_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x5_oneof_case()) {
    case kX5: {
      // No need to clear
      break;
    }
    case X5_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[4] = X5_ONEOF_NOT_SET;
}

void ProcessorState::clear_x6_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x6_oneof_case()) {
    case kX6: {
      // No need to clear
      break;
    }
    case X6_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[5] = X6_ONEOF_NOT_SET;
}

void ProcessorState::clear_x7_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x7_oneof_case()) {
    case kX7: {
      // No need to clear
      break;
    }
    case X7_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[6] = X7_ONEOF_NOT_SET;
}

void ProcessorState::clear_x8_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x8_oneof_case()) {
    case kX8: {
      // No need to clear
      break;
    }
    case X8_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[7] = X8_ONEOF_NOT_SET;
}

void ProcessorState::clear_x9_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x9_oneof_case()) {
    case kX9: {
      // No need to clear
      break;
    }
    case X9_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[8] = X9_ONEOF_NOT_SET;
}

void ProcessorState::clear_x10_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x10_oneof_case()) {
    case kX10: {
      // No need to clear
      break;
    }
    case X10_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[9] = X10_ONEOF_NOT_SET;
}

void ProcessorState::clear_x11_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x11_oneof_case()) {
    case kX11: {
      // No need to clear
      break;
    }
    case X11_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[10] = X11_ONEOF_NOT_SET;
}

void ProcessorState::clear_x12_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x12_oneof_case()) {
    case kX12: {
      // No need to clear
      break;
    }
    case X12_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[11] = X12_ONEOF_NOT_SET;
}

void ProcessorState::clear_x13_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x13_oneof_case()) {
    case kX13: {
      // No need to clear
      break;
    }
    case X13_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[12] = X13_ONEOF_NOT_SET;
}

void ProcessorState::clear_x14_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x14_oneof_case()) {
    case kX14: {
      // No need to clear
      break;
    }
    case X14_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[13] = X14_ONEOF_NOT_SET;
}

void ProcessorState::clear_x15_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x15_oneof_case()) {
    case kX15: {
      // No need to clear
      break;
    }
    case X15_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[14] = X15_ONEOF_NOT_SET;
}

void ProcessorState::clear_x16_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x16_oneof_case()) {
    case kX16: {
      // No need to clear
      break;
    }
    case X16_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[15] = X16_ONEOF_NOT_SET;
}

void ProcessorState::clear_x17_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x17_oneof_case()) {
    case kX17: {
      // No need to clear
      break;
    }
    case X17_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[16] = X17_ONEOF_NOT_SET;
}

void ProcessorState::clear_x18_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x18_oneof_case()) {
    case kX18: {
      // No need to clear
      break;
    }
    case X18_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[17] = X18_ONEOF_NOT_SET;
}

void ProcessorState::clear_x19_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x19_oneof_case()) {
    case kX19: {
      // No need to clear
      break;
    }
    case X19_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[18] = X19_ONEOF_NOT_SET;
}

void ProcessorState::clear_x20_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x20_oneof_case()) {
    case kX20: {
      // No need to clear
      break;
    }
    case X20_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[19] = X20_ONEOF_NOT_SET;
}

void ProcessorState::clear_x21_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x21_oneof_case()) {
    case kX21: {
      // No need to clear
      break;
    }
    case X21_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[20] = X21_ONEOF_NOT_SET;
}

void ProcessorState::clear_x22_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x22_oneof_case()) {
    case kX22: {
      // No need to clear
      break;
    }
    case X22_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[21] = X22_ONEOF_NOT_SET;
}

void ProcessorState::clear_x23_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x23_oneof_case()) {
    case kX23: {
      // No need to clear
      break;
    }
    case X23_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[22] = X23_ONEOF_NOT_SET;
}

void ProcessorState::clear_x24_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x24_oneof_case()) {
    case kX24: {
      // No need to clear
      break;
    }
    case X24_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[23] = X24_ONEOF_NOT_SET;
}

void ProcessorState::clear_x25_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x25_oneof_case()) {
    case kX25: {
      // No need to clear
      break;
    }
    case X25_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[24] = X25_ONEOF_NOT_SET;
}

void ProcessorState::clear_x26_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x26_oneof_case()) {
    case kX26: {
      // No need to clear
      break;
    }
    case X26_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[25] = X26_ONEOF_NOT_SET;
}

void ProcessorState::clear_x27_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x27_oneof_case()) {
    case kX27: {
      // No need to clear
      break;
    }
    case X27_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[26] = X27_ONEOF_NOT_SET;
}

void ProcessorState::clear_x28_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x28_oneof_case()) {
    case kX28: {
      // No need to clear
      break;
    }
    case X28_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[27] = X28_ONEOF_NOT_SET;
}

void ProcessorState::clear_x29_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x29_oneof_case()) {
    case kX29: {
      // No need to clear
      break;
    }
    case X29_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[28] = X29_ONEOF_NOT_SET;
}

void ProcessorState::clear_x30_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x30_oneof_case()) {
    case kX30: {
      // No need to clear
      break;
    }
    case X30_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[29] = X30_ONEOF_NOT_SET;
}

void ProcessorState::clear_x31_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (x31_oneof_case()) {
    case kX31: {
      // No need to clear
      break;
    }
    case X31_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[30] = X31_ONEOF_NOT_SET;
}

void ProcessorState::clear_pc_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (pc_oneof_case()) {
    case kPc: {
      // No need to clear
      break;
    }
    case PC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[31] = PC_ONEOF_NOT_SET;
}

void ProcessorState::clear_mvendorid_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mvendorid_oneof_case()) {
    case kMvendorid: {
      // No need to clear
      break;
    }
    case MVENDORID_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[32] = MVENDORID_ONEOF_NOT_SET;
}

void ProcessorState::clear_marchid_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (marchid_oneof_case()) {
    case kMarchid: {
      // No need to clear
      break;
    }
    case MARCHID_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[33] = MARCHID_ONEOF_NOT_SET;
}

void ProcessorState::clear_mimpid_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mimpid_oneof_case()) {
    case kMimpid: {
      // No need to clear
      break;
    }
    case MIMPID_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[34] = MIMPID_ONEOF_NOT_SET;
}

void ProcessorState::clear_mcycle_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mcycle_oneof_case()) {
    case kMcycle: {
      // No need to clear
      break;
    }
    case MCYCLE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[35] = MCYCLE_ONEOF_NOT_SET;
}

void ProcessorState::clear_minstret_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (minstret_oneof_case()) {
    case kMinstret: {
      // No need to clear
      break;
    }
    case MINSTRET_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[36] = MINSTRET_ONEOF_NOT_SET;
}

void ProcessorState::clear_mstatus_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mstatus_oneof_case()) {
    case kMstatus: {
      // No need to clear
      break;
    }
    case MSTATUS_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[37] = MSTATUS_ONEOF_NOT_SET;
}

void ProcessorState::clear_mtvec_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mtvec_oneof_case()) {
    case kMtvec: {
      // No need to clear
      break;
    }
    case MTVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[38] = MTVEC_ONEOF_NOT_SET;
}

void ProcessorState::clear_mscratch_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mscratch_oneof_case()) {
    case kMscratch: {
      // No need to clear
      break;
    }
    case MSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[39] = MSCRATCH_ONEOF_NOT_SET;
}

void ProcessorState::clear_mepc_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mepc_oneof_case()) {
    case kMepc: {
      // No need to clear
      break;
    }
    case MEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[40] = MEPC_ONEOF_NOT_SET;
}

void ProcessorState::clear_mcause_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mcause_oneof_case()) {
    case kMcause: {
      // No need to clear
      break;
    }
    case MCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[41] = MCAUSE_ONEOF_NOT_SET;
}

void ProcessorState::clear_mtval_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mtval_oneof_case()) {
    case kMtval: {
      // No need to clear
      break;
    }
    case MTVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[42] = MTVAL_ONEOF_NOT_SET;
}

void ProcessorState::clear_misa_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (misa_oneof_case()) {
    case kMisa: {
      // No need to clear
      break;
    }
    case MISA_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[43] = MISA_ONEOF_NOT_SET;
}

void ProcessorState::clear_mie_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mie_oneof_case()) {
    case kMie: {
      // No need to clear
      break;
    }
    case MIE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[44] = MIE_ONEOF_NOT_SET;
}

void ProcessorState::clear_mip_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mip_oneof_case()) {
    case kMip: {
      // No need to clear
      break;
    }
    case MIP_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[45] = MIP_ONEOF_NOT_SET;
}

void ProcessorState::clear_medeleg_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (medeleg_oneof_case()) {
    case kMedeleg: {
      // No need to clear
      break;
    }
    case MEDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[46] = MEDELEG_ONEOF_NOT_SET;
}

void ProcessorState::clear_mideleg_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mideleg_oneof_case()) {
    case kMideleg: {
      // No need to clear
      break;
    }
    case MIDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[47] = MIDELEG_ONEOF_NOT_SET;
}

void ProcessorState::clear_mcounteren_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (mcounteren_oneof_case()) {
    case kMcounteren: {
      // No need to clear
      break;
    }
    case MCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[48] = MCOUNTEREN_ONEOF_NOT_SET;
}

void ProcessorState::clear_stvec_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (stvec_oneof_case()) {
    case kStvec: {
      // No need to clear
      break;
    }
    case STVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[49] = STVEC_ONEOF_NOT_SET;
}

void ProcessorState::clear_sscratch_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (sscratch_oneof_case()) {
    case kSscratch: {
      // No need to clear
      break;
    }
    case SSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[50] = SSCRATCH_ONEOF_NOT_SET;
}

void ProcessorState::clear_sepc_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (sepc_oneof_case()) {
    case kSepc: {
      // No need to clear
      break;
    }
    case SEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[51] = SEPC_ONEOF_NOT_SET;
}

void ProcessorState::clear_scause_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (scause_oneof_case()) {
    case kScause: {
      // No need to clear
      break;
    }
    case SCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[52] = SCAUSE_ONEOF_NOT_SET;
}

void ProcessorState::clear_stval_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (stval_oneof_case()) {
    case kStval: {
      // No need to clear
      break;
    }
    case STVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[53] = STVAL_ONEOF_NOT_SET;
}

void ProcessorState::clear_satp_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (satp_oneof_case()) {
    case kSatp: {
      // No need to clear
      break;
    }
    case SATP_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[54] = SATP_ONEOF_NOT_SET;
}

void ProcessorState::clear_scounteren_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (scounteren_oneof_case()) {
    case kScounteren: {
      // No need to clear
      break;
    }
    case SCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[55] = SCOUNTEREN_ONEOF_NOT_SET;
}

void ProcessorState::clear_ilrsc_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (ilrsc_oneof_case()) {
    case kIlrsc: {
      // No need to clear
      break;
    }
    case ILRSC_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[56] = ILRSC_ONEOF_NOT_SET;
}

void ProcessorState::clear_iflags_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ProcessorState)
  switch (iflags_oneof_case()) {
    case kIflags: {
      // No need to clear
      break;
    }
    case IFLAGS_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[57] = IFLAGS_ONEOF_NOT_SET;
}


void ProcessorState::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.ProcessorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_x1_oneof();
  clear_x2_oneof();
  clear_x3_oneof();
  clear_x4_oneof();
  clear_x5_oneof();
  clear_x6_oneof();
  clear_x7_oneof();
  clear_x8_oneof();
  clear_x9_oneof();
  clear_x10_oneof();
  clear_x11_oneof();
  clear_x12_oneof();
  clear_x13_oneof();
  clear_x14_oneof();
  clear_x15_oneof();
  clear_x16_oneof();
  clear_x17_oneof();
  clear_x18_oneof();
  clear_x19_oneof();
  clear_x20_oneof();
  clear_x21_oneof();
  clear_x22_oneof();
  clear_x23_oneof();
  clear_x24_oneof();
  clear_x25_oneof();
  clear_x26_oneof();
  clear_x27_oneof();
  clear_x28_oneof();
  clear_x29_oneof();
  clear_x30_oneof();
  clear_x31_oneof();
  clear_pc_oneof();
  clear_mvendorid_oneof();
  clear_marchid_oneof();
  clear_mimpid_oneof();
  clear_mcycle_oneof();
  clear_minstret_oneof();
  clear_mstatus_oneof();
  clear_mtvec_oneof();
  clear_mscratch_oneof();
  clear_mepc_oneof();
  clear_mcause_oneof();
  clear_mtval_oneof();
  clear_misa_oneof();
  clear_mie_oneof();
  clear_mip_oneof();
  clear_medeleg_oneof();
  clear_mideleg_oneof();
  clear_mcounteren_oneof();
  clear_stvec_oneof();
  clear_sscratch_oneof();
  clear_sepc_oneof();
  clear_scause_oneof();
  clear_stval_oneof();
  clear_satp_oneof();
  clear_scounteren_oneof();
  clear_ilrsc_oneof();
  clear_iflags_oneof();
  _internal_metadata_.Clear();
}

bool ProcessorState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.ProcessorState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 x1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_x1_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x1_oneof_.x1_)));
          set_has_x1();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_x2_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x2_oneof_.x2_)));
          set_has_x2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_x3_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x3_oneof_.x3_)));
          set_has_x3();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_x4_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x4_oneof_.x4_)));
          set_has_x4();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_x5_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x5_oneof_.x5_)));
          set_has_x5();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_x6_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x6_oneof_.x6_)));
          set_has_x6();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_x7_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x7_oneof_.x7_)));
          set_has_x7();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_x8_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x8_oneof_.x8_)));
          set_has_x8();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x9 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_x9_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x9_oneof_.x9_)));
          set_has_x9();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x10 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_x10_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x10_oneof_.x10_)));
          set_has_x10();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x11 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          clear_x11_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x11_oneof_.x11_)));
          set_has_x11();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x12 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_x12_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x12_oneof_.x12_)));
          set_has_x12();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x13 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_x13_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x13_oneof_.x13_)));
          set_has_x13();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x14 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          clear_x14_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x14_oneof_.x14_)));
          set_has_x14();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x15 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          clear_x15_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x15_oneof_.x15_)));
          set_has_x15();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x16 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          clear_x16_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x16_oneof_.x16_)));
          set_has_x16();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x17 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          clear_x17_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x17_oneof_.x17_)));
          set_has_x17();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x18 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          clear_x18_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x18_oneof_.x18_)));
          set_has_x18();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x19 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          clear_x19_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x19_oneof_.x19_)));
          set_has_x19();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x20 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          clear_x20_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x20_oneof_.x20_)));
          set_has_x20();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x21 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          clear_x21_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x21_oneof_.x21_)));
          set_has_x21();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x22 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          clear_x22_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x22_oneof_.x22_)));
          set_has_x22();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x23 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          clear_x23_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x23_oneof_.x23_)));
          set_has_x23();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x24 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          clear_x24_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x24_oneof_.x24_)));
          set_has_x24();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x25 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          clear_x25_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x25_oneof_.x25_)));
          set_has_x25();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x26 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          clear_x26_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x26_oneof_.x26_)));
          set_has_x26();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x27 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          clear_x27_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x27_oneof_.x27_)));
          set_has_x27();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x28 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          clear_x28_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x28_oneof_.x28_)));
          set_has_x28();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x29 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          clear_x29_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x29_oneof_.x29_)));
          set_has_x29();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x30 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          clear_x30_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x30_oneof_.x30_)));
          set_has_x30();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x31 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          clear_x31_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x31_oneof_.x31_)));
          set_has_x31();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pc = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          clear_pc_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pc_oneof_.pc_)));
          set_has_pc();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mvendorid = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          clear_mvendorid_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mvendorid_oneof_.mvendorid_)));
          set_has_mvendorid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 marchid = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          clear_marchid_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &marchid_oneof_.marchid_)));
          set_has_marchid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mimpid = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          clear_mimpid_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mimpid_oneof_.mimpid_)));
          set_has_mimpid();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mcycle = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          clear_mcycle_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mcycle_oneof_.mcycle_)));
          set_has_mcycle();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 minstret = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {
          clear_minstret_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minstret_oneof_.minstret_)));
          set_has_minstret();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mstatus = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          clear_mstatus_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mstatus_oneof_.mstatus_)));
          set_has_mstatus();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mtvec = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          clear_mtvec_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mtvec_oneof_.mtvec_)));
          set_has_mtvec();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mscratch = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          clear_mscratch_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mscratch_oneof_.mscratch_)));
          set_has_mscratch();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mepc = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          clear_mepc_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mepc_oneof_.mepc_)));
          set_has_mepc();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mcause = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          clear_mcause_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mcause_oneof_.mcause_)));
          set_has_mcause();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mtval = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          clear_mtval_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mtval_oneof_.mtval_)));
          set_has_mtval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 misa = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          clear_misa_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &misa_oneof_.misa_)));
          set_has_misa();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mie = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          clear_mie_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mie_oneof_.mie_)));
          set_has_mie();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mip = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          clear_mip_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mip_oneof_.mip_)));
          set_has_mip();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 medeleg = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          clear_medeleg_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &medeleg_oneof_.medeleg_)));
          set_has_medeleg();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mideleg = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {
          clear_mideleg_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mideleg_oneof_.mideleg_)));
          set_has_mideleg();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mcounteren = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          clear_mcounteren_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mcounteren_oneof_.mcounteren_)));
          set_has_mcounteren();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 stvec = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          clear_stvec_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stvec_oneof_.stvec_)));
          set_has_stvec();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sscratch = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          clear_sscratch_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sscratch_oneof_.sscratch_)));
          set_has_sscratch();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sepc = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          clear_sepc_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sepc_oneof_.sepc_)));
          set_has_sepc();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 scause = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {
          clear_scause_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scause_oneof_.scause_)));
          set_has_scause();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 stval = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          clear_stval_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stval_oneof_.stval_)));
          set_has_stval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 satp = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {
          clear_satp_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &satp_oneof_.satp_)));
          set_has_satp();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 scounteren = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {
          clear_scounteren_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scounteren_oneof_.scounteren_)));
          set_has_scounteren();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ilrsc = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 456 & 0xFF */)) {
          clear_ilrsc_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ilrsc_oneof_.ilrsc_)));
          set_has_ilrsc();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 iflags = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {
          clear_iflags_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iflags_oneof_.iflags_)));
          set_has_iflags();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.ProcessorState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.ProcessorState)
  return false;
#undef DO_
}

void ProcessorState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.ProcessorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 x1 = 1;
  if (has_x1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->x1(), output);
  }

  // uint64 x2 = 2;
  if (has_x2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->x2(), output);
  }

  // uint64 x3 = 3;
  if (has_x3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->x3(), output);
  }

  // uint64 x4 = 4;
  if (has_x4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->x4(), output);
  }

  // uint64 x5 = 5;
  if (has_x5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->x5(), output);
  }

  // uint64 x6 = 6;
  if (has_x6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->x6(), output);
  }

  // uint64 x7 = 7;
  if (has_x7()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->x7(), output);
  }

  // uint64 x8 = 8;
  if (has_x8()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->x8(), output);
  }

  // uint64 x9 = 9;
  if (has_x9()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->x9(), output);
  }

  // uint64 x10 = 10;
  if (has_x10()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->x10(), output);
  }

  // uint64 x11 = 11;
  if (has_x11()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->x11(), output);
  }

  // uint64 x12 = 12;
  if (has_x12()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->x12(), output);
  }

  // uint64 x13 = 13;
  if (has_x13()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->x13(), output);
  }

  // uint64 x14 = 14;
  if (has_x14()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->x14(), output);
  }

  // uint64 x15 = 15;
  if (has_x15()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->x15(), output);
  }

  // uint64 x16 = 16;
  if (has_x16()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->x16(), output);
  }

  // uint64 x17 = 17;
  if (has_x17()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->x17(), output);
  }

  // uint64 x18 = 18;
  if (has_x18()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->x18(), output);
  }

  // uint64 x19 = 19;
  if (has_x19()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->x19(), output);
  }

  // uint64 x20 = 20;
  if (has_x20()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->x20(), output);
  }

  // uint64 x21 = 21;
  if (has_x21()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->x21(), output);
  }

  // uint64 x22 = 22;
  if (has_x22()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(22, this->x22(), output);
  }

  // uint64 x23 = 23;
  if (has_x23()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->x23(), output);
  }

  // uint64 x24 = 24;
  if (has_x24()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(24, this->x24(), output);
  }

  // uint64 x25 = 25;
  if (has_x25()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(25, this->x25(), output);
  }

  // uint64 x26 = 26;
  if (has_x26()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(26, this->x26(), output);
  }

  // uint64 x27 = 27;
  if (has_x27()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(27, this->x27(), output);
  }

  // uint64 x28 = 28;
  if (has_x28()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(28, this->x28(), output);
  }

  // uint64 x29 = 29;
  if (has_x29()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(29, this->x29(), output);
  }

  // uint64 x30 = 30;
  if (has_x30()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->x30(), output);
  }

  // uint64 x31 = 31;
  if (has_x31()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->x31(), output);
  }

  // uint64 pc = 32;
  if (has_pc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->pc(), output);
  }

  // uint64 mvendorid = 33;
  if (has_mvendorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(33, this->mvendorid(), output);
  }

  // uint64 marchid = 34;
  if (has_marchid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(34, this->marchid(), output);
  }

  // uint64 mimpid = 35;
  if (has_mimpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(35, this->mimpid(), output);
  }

  // uint64 mcycle = 36;
  if (has_mcycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(36, this->mcycle(), output);
  }

  // uint64 minstret = 37;
  if (has_minstret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(37, this->minstret(), output);
  }

  // uint64 mstatus = 38;
  if (has_mstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(38, this->mstatus(), output);
  }

  // uint64 mtvec = 39;
  if (has_mtvec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(39, this->mtvec(), output);
  }

  // uint64 mscratch = 40;
  if (has_mscratch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(40, this->mscratch(), output);
  }

  // uint64 mepc = 41;
  if (has_mepc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(41, this->mepc(), output);
  }

  // uint64 mcause = 42;
  if (has_mcause()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(42, this->mcause(), output);
  }

  // uint64 mtval = 43;
  if (has_mtval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(43, this->mtval(), output);
  }

  // uint64 misa = 44;
  if (has_misa()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(44, this->misa(), output);
  }

  // uint64 mie = 45;
  if (has_mie()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(45, this->mie(), output);
  }

  // uint64 mip = 46;
  if (has_mip()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(46, this->mip(), output);
  }

  // uint64 medeleg = 47;
  if (has_medeleg()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(47, this->medeleg(), output);
  }

  // uint64 mideleg = 48;
  if (has_mideleg()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(48, this->mideleg(), output);
  }

  // uint64 mcounteren = 49;
  if (has_mcounteren()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(49, this->mcounteren(), output);
  }

  // uint64 stvec = 50;
  if (has_stvec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(50, this->stvec(), output);
  }

  // uint64 sscratch = 51;
  if (has_sscratch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(51, this->sscratch(), output);
  }

  // uint64 sepc = 52;
  if (has_sepc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(52, this->sepc(), output);
  }

  // uint64 scause = 53;
  if (has_scause()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(53, this->scause(), output);
  }

  // uint64 stval = 54;
  if (has_stval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(54, this->stval(), output);
  }

  // uint64 satp = 55;
  if (has_satp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(55, this->satp(), output);
  }

  // uint64 scounteren = 56;
  if (has_scounteren()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(56, this->scounteren(), output);
  }

  // uint64 ilrsc = 57;
  if (has_ilrsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(57, this->ilrsc(), output);
  }

  // uint64 iflags = 58;
  if (has_iflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(58, this->iflags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.ProcessorState)
}

::google::protobuf::uint8* ProcessorState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.ProcessorState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 x1 = 1;
  if (has_x1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->x1(), target);
  }

  // uint64 x2 = 2;
  if (has_x2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->x2(), target);
  }

  // uint64 x3 = 3;
  if (has_x3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->x3(), target);
  }

  // uint64 x4 = 4;
  if (has_x4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->x4(), target);
  }

  // uint64 x5 = 5;
  if (has_x5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->x5(), target);
  }

  // uint64 x6 = 6;
  if (has_x6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->x6(), target);
  }

  // uint64 x7 = 7;
  if (has_x7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->x7(), target);
  }

  // uint64 x8 = 8;
  if (has_x8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->x8(), target);
  }

  // uint64 x9 = 9;
  if (has_x9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->x9(), target);
  }

  // uint64 x10 = 10;
  if (has_x10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->x10(), target);
  }

  // uint64 x11 = 11;
  if (has_x11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->x11(), target);
  }

  // uint64 x12 = 12;
  if (has_x12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->x12(), target);
  }

  // uint64 x13 = 13;
  if (has_x13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->x13(), target);
  }

  // uint64 x14 = 14;
  if (has_x14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->x14(), target);
  }

  // uint64 x15 = 15;
  if (has_x15()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->x15(), target);
  }

  // uint64 x16 = 16;
  if (has_x16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->x16(), target);
  }

  // uint64 x17 = 17;
  if (has_x17()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->x17(), target);
  }

  // uint64 x18 = 18;
  if (has_x18()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->x18(), target);
  }

  // uint64 x19 = 19;
  if (has_x19()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->x19(), target);
  }

  // uint64 x20 = 20;
  if (has_x20()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->x20(), target);
  }

  // uint64 x21 = 21;
  if (has_x21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->x21(), target);
  }

  // uint64 x22 = 22;
  if (has_x22()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(22, this->x22(), target);
  }

  // uint64 x23 = 23;
  if (has_x23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->x23(), target);
  }

  // uint64 x24 = 24;
  if (has_x24()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(24, this->x24(), target);
  }

  // uint64 x25 = 25;
  if (has_x25()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(25, this->x25(), target);
  }

  // uint64 x26 = 26;
  if (has_x26()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(26, this->x26(), target);
  }

  // uint64 x27 = 27;
  if (has_x27()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(27, this->x27(), target);
  }

  // uint64 x28 = 28;
  if (has_x28()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(28, this->x28(), target);
  }

  // uint64 x29 = 29;
  if (has_x29()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(29, this->x29(), target);
  }

  // uint64 x30 = 30;
  if (has_x30()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->x30(), target);
  }

  // uint64 x31 = 31;
  if (has_x31()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->x31(), target);
  }

  // uint64 pc = 32;
  if (has_pc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->pc(), target);
  }

  // uint64 mvendorid = 33;
  if (has_mvendorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(33, this->mvendorid(), target);
  }

  // uint64 marchid = 34;
  if (has_marchid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(34, this->marchid(), target);
  }

  // uint64 mimpid = 35;
  if (has_mimpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(35, this->mimpid(), target);
  }

  // uint64 mcycle = 36;
  if (has_mcycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(36, this->mcycle(), target);
  }

  // uint64 minstret = 37;
  if (has_minstret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(37, this->minstret(), target);
  }

  // uint64 mstatus = 38;
  if (has_mstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(38, this->mstatus(), target);
  }

  // uint64 mtvec = 39;
  if (has_mtvec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(39, this->mtvec(), target);
  }

  // uint64 mscratch = 40;
  if (has_mscratch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(40, this->mscratch(), target);
  }

  // uint64 mepc = 41;
  if (has_mepc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(41, this->mepc(), target);
  }

  // uint64 mcause = 42;
  if (has_mcause()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(42, this->mcause(), target);
  }

  // uint64 mtval = 43;
  if (has_mtval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(43, this->mtval(), target);
  }

  // uint64 misa = 44;
  if (has_misa()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(44, this->misa(), target);
  }

  // uint64 mie = 45;
  if (has_mie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(45, this->mie(), target);
  }

  // uint64 mip = 46;
  if (has_mip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(46, this->mip(), target);
  }

  // uint64 medeleg = 47;
  if (has_medeleg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(47, this->medeleg(), target);
  }

  // uint64 mideleg = 48;
  if (has_mideleg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(48, this->mideleg(), target);
  }

  // uint64 mcounteren = 49;
  if (has_mcounteren()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(49, this->mcounteren(), target);
  }

  // uint64 stvec = 50;
  if (has_stvec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(50, this->stvec(), target);
  }

  // uint64 sscratch = 51;
  if (has_sscratch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(51, this->sscratch(), target);
  }

  // uint64 sepc = 52;
  if (has_sepc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(52, this->sepc(), target);
  }

  // uint64 scause = 53;
  if (has_scause()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(53, this->scause(), target);
  }

  // uint64 stval = 54;
  if (has_stval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(54, this->stval(), target);
  }

  // uint64 satp = 55;
  if (has_satp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(55, this->satp(), target);
  }

  // uint64 scounteren = 56;
  if (has_scounteren()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(56, this->scounteren(), target);
  }

  // uint64 ilrsc = 57;
  if (has_ilrsc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(57, this->ilrsc(), target);
  }

  // uint64 iflags = 58;
  if (has_iflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(58, this->iflags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.ProcessorState)
  return target;
}

size_t ProcessorState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.ProcessorState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (x1_oneof_case()) {
    // uint64 x1 = 1;
    case kX1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x1());
      break;
    }
    case X1_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x2_oneof_case()) {
    // uint64 x2 = 2;
    case kX2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x2());
      break;
    }
    case X2_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x3_oneof_case()) {
    // uint64 x3 = 3;
    case kX3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x3());
      break;
    }
    case X3_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x4_oneof_case()) {
    // uint64 x4 = 4;
    case kX4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x4());
      break;
    }
    case X4_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x5_oneof_case()) {
    // uint64 x5 = 5;
    case kX5: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x5());
      break;
    }
    case X5_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x6_oneof_case()) {
    // uint64 x6 = 6;
    case kX6: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x6());
      break;
    }
    case X6_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x7_oneof_case()) {
    // uint64 x7 = 7;
    case kX7: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x7());
      break;
    }
    case X7_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x8_oneof_case()) {
    // uint64 x8 = 8;
    case kX8: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x8());
      break;
    }
    case X8_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x9_oneof_case()) {
    // uint64 x9 = 9;
    case kX9: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x9());
      break;
    }
    case X9_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x10_oneof_case()) {
    // uint64 x10 = 10;
    case kX10: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x10());
      break;
    }
    case X10_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x11_oneof_case()) {
    // uint64 x11 = 11;
    case kX11: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x11());
      break;
    }
    case X11_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x12_oneof_case()) {
    // uint64 x12 = 12;
    case kX12: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x12());
      break;
    }
    case X12_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x13_oneof_case()) {
    // uint64 x13 = 13;
    case kX13: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x13());
      break;
    }
    case X13_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x14_oneof_case()) {
    // uint64 x14 = 14;
    case kX14: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x14());
      break;
    }
    case X14_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x15_oneof_case()) {
    // uint64 x15 = 15;
    case kX15: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x15());
      break;
    }
    case X15_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x16_oneof_case()) {
    // uint64 x16 = 16;
    case kX16: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x16());
      break;
    }
    case X16_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x17_oneof_case()) {
    // uint64 x17 = 17;
    case kX17: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x17());
      break;
    }
    case X17_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x18_oneof_case()) {
    // uint64 x18 = 18;
    case kX18: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x18());
      break;
    }
    case X18_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x19_oneof_case()) {
    // uint64 x19 = 19;
    case kX19: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x19());
      break;
    }
    case X19_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x20_oneof_case()) {
    // uint64 x20 = 20;
    case kX20: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x20());
      break;
    }
    case X20_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x21_oneof_case()) {
    // uint64 x21 = 21;
    case kX21: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x21());
      break;
    }
    case X21_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x22_oneof_case()) {
    // uint64 x22 = 22;
    case kX22: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x22());
      break;
    }
    case X22_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x23_oneof_case()) {
    // uint64 x23 = 23;
    case kX23: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x23());
      break;
    }
    case X23_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x24_oneof_case()) {
    // uint64 x24 = 24;
    case kX24: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x24());
      break;
    }
    case X24_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x25_oneof_case()) {
    // uint64 x25 = 25;
    case kX25: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x25());
      break;
    }
    case X25_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x26_oneof_case()) {
    // uint64 x26 = 26;
    case kX26: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x26());
      break;
    }
    case X26_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x27_oneof_case()) {
    // uint64 x27 = 27;
    case kX27: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x27());
      break;
    }
    case X27_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x28_oneof_case()) {
    // uint64 x28 = 28;
    case kX28: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x28());
      break;
    }
    case X28_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x29_oneof_case()) {
    // uint64 x29 = 29;
    case kX29: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x29());
      break;
    }
    case X29_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x30_oneof_case()) {
    // uint64 x30 = 30;
    case kX30: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x30());
      break;
    }
    case X30_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (x31_oneof_case()) {
    // uint64 x31 = 31;
    case kX31: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->x31());
      break;
    }
    case X31_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (pc_oneof_case()) {
    // uint64 pc = 32;
    case kPc: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pc());
      break;
    }
    case PC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mvendorid_oneof_case()) {
    // uint64 mvendorid = 33;
    case kMvendorid: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mvendorid());
      break;
    }
    case MVENDORID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (marchid_oneof_case()) {
    // uint64 marchid = 34;
    case kMarchid: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->marchid());
      break;
    }
    case MARCHID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mimpid_oneof_case()) {
    // uint64 mimpid = 35;
    case kMimpid: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mimpid());
      break;
    }
    case MIMPID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mcycle_oneof_case()) {
    // uint64 mcycle = 36;
    case kMcycle: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mcycle());
      break;
    }
    case MCYCLE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (minstret_oneof_case()) {
    // uint64 minstret = 37;
    case kMinstret: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->minstret());
      break;
    }
    case MINSTRET_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mstatus_oneof_case()) {
    // uint64 mstatus = 38;
    case kMstatus: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mstatus());
      break;
    }
    case MSTATUS_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mtvec_oneof_case()) {
    // uint64 mtvec = 39;
    case kMtvec: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mtvec());
      break;
    }
    case MTVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mscratch_oneof_case()) {
    // uint64 mscratch = 40;
    case kMscratch: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mscratch());
      break;
    }
    case MSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mepc_oneof_case()) {
    // uint64 mepc = 41;
    case kMepc: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mepc());
      break;
    }
    case MEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mcause_oneof_case()) {
    // uint64 mcause = 42;
    case kMcause: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mcause());
      break;
    }
    case MCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mtval_oneof_case()) {
    // uint64 mtval = 43;
    case kMtval: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mtval());
      break;
    }
    case MTVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (misa_oneof_case()) {
    // uint64 misa = 44;
    case kMisa: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->misa());
      break;
    }
    case MISA_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mie_oneof_case()) {
    // uint64 mie = 45;
    case kMie: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mie());
      break;
    }
    case MIE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mip_oneof_case()) {
    // uint64 mip = 46;
    case kMip: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mip());
      break;
    }
    case MIP_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (medeleg_oneof_case()) {
    // uint64 medeleg = 47;
    case kMedeleg: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->medeleg());
      break;
    }
    case MEDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mideleg_oneof_case()) {
    // uint64 mideleg = 48;
    case kMideleg: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mideleg());
      break;
    }
    case MIDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (mcounteren_oneof_case()) {
    // uint64 mcounteren = 49;
    case kMcounteren: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mcounteren());
      break;
    }
    case MCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (stvec_oneof_case()) {
    // uint64 stvec = 50;
    case kStvec: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->stvec());
      break;
    }
    case STVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (sscratch_oneof_case()) {
    // uint64 sscratch = 51;
    case kSscratch: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sscratch());
      break;
    }
    case SSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (sepc_oneof_case()) {
    // uint64 sepc = 52;
    case kSepc: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sepc());
      break;
    }
    case SEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (scause_oneof_case()) {
    // uint64 scause = 53;
    case kScause: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->scause());
      break;
    }
    case SCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (stval_oneof_case()) {
    // uint64 stval = 54;
    case kStval: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->stval());
      break;
    }
    case STVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (satp_oneof_case()) {
    // uint64 satp = 55;
    case kSatp: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->satp());
      break;
    }
    case SATP_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (scounteren_oneof_case()) {
    // uint64 scounteren = 56;
    case kScounteren: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->scounteren());
      break;
    }
    case SCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (ilrsc_oneof_case()) {
    // uint64 ilrsc = 57;
    case kIlrsc: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ilrsc());
      break;
    }
    case ILRSC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (iflags_oneof_case()) {
    // uint64 iflags = 58;
    case kIflags: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->iflags());
      break;
    }
    case IFLAGS_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessorState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.ProcessorState)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.ProcessorState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.ProcessorState)
    MergeFrom(*source);
  }
}

void ProcessorState::MergeFrom(const ProcessorState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.ProcessorState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.x1_oneof_case()) {
    case kX1: {
      set_x1(from.x1());
      break;
    }
    case X1_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x2_oneof_case()) {
    case kX2: {
      set_x2(from.x2());
      break;
    }
    case X2_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x3_oneof_case()) {
    case kX3: {
      set_x3(from.x3());
      break;
    }
    case X3_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x4_oneof_case()) {
    case kX4: {
      set_x4(from.x4());
      break;
    }
    case X4_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x5_oneof_case()) {
    case kX5: {
      set_x5(from.x5());
      break;
    }
    case X5_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x6_oneof_case()) {
    case kX6: {
      set_x6(from.x6());
      break;
    }
    case X6_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x7_oneof_case()) {
    case kX7: {
      set_x7(from.x7());
      break;
    }
    case X7_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x8_oneof_case()) {
    case kX8: {
      set_x8(from.x8());
      break;
    }
    case X8_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x9_oneof_case()) {
    case kX9: {
      set_x9(from.x9());
      break;
    }
    case X9_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x10_oneof_case()) {
    case kX10: {
      set_x10(from.x10());
      break;
    }
    case X10_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x11_oneof_case()) {
    case kX11: {
      set_x11(from.x11());
      break;
    }
    case X11_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x12_oneof_case()) {
    case kX12: {
      set_x12(from.x12());
      break;
    }
    case X12_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x13_oneof_case()) {
    case kX13: {
      set_x13(from.x13());
      break;
    }
    case X13_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x14_oneof_case()) {
    case kX14: {
      set_x14(from.x14());
      break;
    }
    case X14_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x15_oneof_case()) {
    case kX15: {
      set_x15(from.x15());
      break;
    }
    case X15_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x16_oneof_case()) {
    case kX16: {
      set_x16(from.x16());
      break;
    }
    case X16_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x17_oneof_case()) {
    case kX17: {
      set_x17(from.x17());
      break;
    }
    case X17_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x18_oneof_case()) {
    case kX18: {
      set_x18(from.x18());
      break;
    }
    case X18_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x19_oneof_case()) {
    case kX19: {
      set_x19(from.x19());
      break;
    }
    case X19_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x20_oneof_case()) {
    case kX20: {
      set_x20(from.x20());
      break;
    }
    case X20_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x21_oneof_case()) {
    case kX21: {
      set_x21(from.x21());
      break;
    }
    case X21_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x22_oneof_case()) {
    case kX22: {
      set_x22(from.x22());
      break;
    }
    case X22_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x23_oneof_case()) {
    case kX23: {
      set_x23(from.x23());
      break;
    }
    case X23_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x24_oneof_case()) {
    case kX24: {
      set_x24(from.x24());
      break;
    }
    case X24_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x25_oneof_case()) {
    case kX25: {
      set_x25(from.x25());
      break;
    }
    case X25_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x26_oneof_case()) {
    case kX26: {
      set_x26(from.x26());
      break;
    }
    case X26_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x27_oneof_case()) {
    case kX27: {
      set_x27(from.x27());
      break;
    }
    case X27_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x28_oneof_case()) {
    case kX28: {
      set_x28(from.x28());
      break;
    }
    case X28_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x29_oneof_case()) {
    case kX29: {
      set_x29(from.x29());
      break;
    }
    case X29_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x30_oneof_case()) {
    case kX30: {
      set_x30(from.x30());
      break;
    }
    case X30_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.x31_oneof_case()) {
    case kX31: {
      set_x31(from.x31());
      break;
    }
    case X31_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.pc_oneof_case()) {
    case kPc: {
      set_pc(from.pc());
      break;
    }
    case PC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mvendorid_oneof_case()) {
    case kMvendorid: {
      set_mvendorid(from.mvendorid());
      break;
    }
    case MVENDORID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.marchid_oneof_case()) {
    case kMarchid: {
      set_marchid(from.marchid());
      break;
    }
    case MARCHID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mimpid_oneof_case()) {
    case kMimpid: {
      set_mimpid(from.mimpid());
      break;
    }
    case MIMPID_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mcycle_oneof_case()) {
    case kMcycle: {
      set_mcycle(from.mcycle());
      break;
    }
    case MCYCLE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.minstret_oneof_case()) {
    case kMinstret: {
      set_minstret(from.minstret());
      break;
    }
    case MINSTRET_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mstatus_oneof_case()) {
    case kMstatus: {
      set_mstatus(from.mstatus());
      break;
    }
    case MSTATUS_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mtvec_oneof_case()) {
    case kMtvec: {
      set_mtvec(from.mtvec());
      break;
    }
    case MTVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mscratch_oneof_case()) {
    case kMscratch: {
      set_mscratch(from.mscratch());
      break;
    }
    case MSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mepc_oneof_case()) {
    case kMepc: {
      set_mepc(from.mepc());
      break;
    }
    case MEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mcause_oneof_case()) {
    case kMcause: {
      set_mcause(from.mcause());
      break;
    }
    case MCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mtval_oneof_case()) {
    case kMtval: {
      set_mtval(from.mtval());
      break;
    }
    case MTVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.misa_oneof_case()) {
    case kMisa: {
      set_misa(from.misa());
      break;
    }
    case MISA_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mie_oneof_case()) {
    case kMie: {
      set_mie(from.mie());
      break;
    }
    case MIE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mip_oneof_case()) {
    case kMip: {
      set_mip(from.mip());
      break;
    }
    case MIP_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.medeleg_oneof_case()) {
    case kMedeleg: {
      set_medeleg(from.medeleg());
      break;
    }
    case MEDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mideleg_oneof_case()) {
    case kMideleg: {
      set_mideleg(from.mideleg());
      break;
    }
    case MIDELEG_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.mcounteren_oneof_case()) {
    case kMcounteren: {
      set_mcounteren(from.mcounteren());
      break;
    }
    case MCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.stvec_oneof_case()) {
    case kStvec: {
      set_stvec(from.stvec());
      break;
    }
    case STVEC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.sscratch_oneof_case()) {
    case kSscratch: {
      set_sscratch(from.sscratch());
      break;
    }
    case SSCRATCH_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.sepc_oneof_case()) {
    case kSepc: {
      set_sepc(from.sepc());
      break;
    }
    case SEPC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.scause_oneof_case()) {
    case kScause: {
      set_scause(from.scause());
      break;
    }
    case SCAUSE_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.stval_oneof_case()) {
    case kStval: {
      set_stval(from.stval());
      break;
    }
    case STVAL_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.satp_oneof_case()) {
    case kSatp: {
      set_satp(from.satp());
      break;
    }
    case SATP_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.scounteren_oneof_case()) {
    case kScounteren: {
      set_scounteren(from.scounteren());
      break;
    }
    case SCOUNTEREN_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.ilrsc_oneof_case()) {
    case kIlrsc: {
      set_ilrsc(from.ilrsc());
      break;
    }
    case ILRSC_ONEOF_NOT_SET: {
      break;
    }
  }
  switch (from.iflags_oneof_case()) {
    case kIflags: {
      set_iflags(from.iflags());
      break;
    }
    case IFLAGS_ONEOF_NOT_SET: {
      break;
    }
  }
}

void ProcessorState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.ProcessorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorState::CopyFrom(const ProcessorState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.ProcessorState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorState::IsInitialized() const {
  return true;
}

void ProcessorState::Swap(ProcessorState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorState::InternalSwap(ProcessorState* other) {
  using std::swap;
  swap(x1_oneof_, other->x1_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(x2_oneof_, other->x2_oneof_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  swap(x3_oneof_, other->x3_oneof_);
  swap(_oneof_case_[2], other->_oneof_case_[2]);
  swap(x4_oneof_, other->x4_oneof_);
  swap(_oneof_case_[3], other->_oneof_case_[3]);
  swap(x5_oneof_, other->x5_oneof_);
  swap(_oneof_case_[4], other->_oneof_case_[4]);
  swap(x6_oneof_, other->x6_oneof_);
  swap(_oneof_case_[5], other->_oneof_case_[5]);
  swap(x7_oneof_, other->x7_oneof_);
  swap(_oneof_case_[6], other->_oneof_case_[6]);
  swap(x8_oneof_, other->x8_oneof_);
  swap(_oneof_case_[7], other->_oneof_case_[7]);
  swap(x9_oneof_, other->x9_oneof_);
  swap(_oneof_case_[8], other->_oneof_case_[8]);
  swap(x10_oneof_, other->x10_oneof_);
  swap(_oneof_case_[9], other->_oneof_case_[9]);
  swap(x11_oneof_, other->x11_oneof_);
  swap(_oneof_case_[10], other->_oneof_case_[10]);
  swap(x12_oneof_, other->x12_oneof_);
  swap(_oneof_case_[11], other->_oneof_case_[11]);
  swap(x13_oneof_, other->x13_oneof_);
  swap(_oneof_case_[12], other->_oneof_case_[12]);
  swap(x14_oneof_, other->x14_oneof_);
  swap(_oneof_case_[13], other->_oneof_case_[13]);
  swap(x15_oneof_, other->x15_oneof_);
  swap(_oneof_case_[14], other->_oneof_case_[14]);
  swap(x16_oneof_, other->x16_oneof_);
  swap(_oneof_case_[15], other->_oneof_case_[15]);
  swap(x17_oneof_, other->x17_oneof_);
  swap(_oneof_case_[16], other->_oneof_case_[16]);
  swap(x18_oneof_, other->x18_oneof_);
  swap(_oneof_case_[17], other->_oneof_case_[17]);
  swap(x19_oneof_, other->x19_oneof_);
  swap(_oneof_case_[18], other->_oneof_case_[18]);
  swap(x20_oneof_, other->x20_oneof_);
  swap(_oneof_case_[19], other->_oneof_case_[19]);
  swap(x21_oneof_, other->x21_oneof_);
  swap(_oneof_case_[20], other->_oneof_case_[20]);
  swap(x22_oneof_, other->x22_oneof_);
  swap(_oneof_case_[21], other->_oneof_case_[21]);
  swap(x23_oneof_, other->x23_oneof_);
  swap(_oneof_case_[22], other->_oneof_case_[22]);
  swap(x24_oneof_, other->x24_oneof_);
  swap(_oneof_case_[23], other->_oneof_case_[23]);
  swap(x25_oneof_, other->x25_oneof_);
  swap(_oneof_case_[24], other->_oneof_case_[24]);
  swap(x26_oneof_, other->x26_oneof_);
  swap(_oneof_case_[25], other->_oneof_case_[25]);
  swap(x27_oneof_, other->x27_oneof_);
  swap(_oneof_case_[26], other->_oneof_case_[26]);
  swap(x28_oneof_, other->x28_oneof_);
  swap(_oneof_case_[27], other->_oneof_case_[27]);
  swap(x29_oneof_, other->x29_oneof_);
  swap(_oneof_case_[28], other->_oneof_case_[28]);
  swap(x30_oneof_, other->x30_oneof_);
  swap(_oneof_case_[29], other->_oneof_case_[29]);
  swap(x31_oneof_, other->x31_oneof_);
  swap(_oneof_case_[30], other->_oneof_case_[30]);
  swap(pc_oneof_, other->pc_oneof_);
  swap(_oneof_case_[31], other->_oneof_case_[31]);
  swap(mvendorid_oneof_, other->mvendorid_oneof_);
  swap(_oneof_case_[32], other->_oneof_case_[32]);
  swap(marchid_oneof_, other->marchid_oneof_);
  swap(_oneof_case_[33], other->_oneof_case_[33]);
  swap(mimpid_oneof_, other->mimpid_oneof_);
  swap(_oneof_case_[34], other->_oneof_case_[34]);
  swap(mcycle_oneof_, other->mcycle_oneof_);
  swap(_oneof_case_[35], other->_oneof_case_[35]);
  swap(minstret_oneof_, other->minstret_oneof_);
  swap(_oneof_case_[36], other->_oneof_case_[36]);
  swap(mstatus_oneof_, other->mstatus_oneof_);
  swap(_oneof_case_[37], other->_oneof_case_[37]);
  swap(mtvec_oneof_, other->mtvec_oneof_);
  swap(_oneof_case_[38], other->_oneof_case_[38]);
  swap(mscratch_oneof_, other->mscratch_oneof_);
  swap(_oneof_case_[39], other->_oneof_case_[39]);
  swap(mepc_oneof_, other->mepc_oneof_);
  swap(_oneof_case_[40], other->_oneof_case_[40]);
  swap(mcause_oneof_, other->mcause_oneof_);
  swap(_oneof_case_[41], other->_oneof_case_[41]);
  swap(mtval_oneof_, other->mtval_oneof_);
  swap(_oneof_case_[42], other->_oneof_case_[42]);
  swap(misa_oneof_, other->misa_oneof_);
  swap(_oneof_case_[43], other->_oneof_case_[43]);
  swap(mie_oneof_, other->mie_oneof_);
  swap(_oneof_case_[44], other->_oneof_case_[44]);
  swap(mip_oneof_, other->mip_oneof_);
  swap(_oneof_case_[45], other->_oneof_case_[45]);
  swap(medeleg_oneof_, other->medeleg_oneof_);
  swap(_oneof_case_[46], other->_oneof_case_[46]);
  swap(mideleg_oneof_, other->mideleg_oneof_);
  swap(_oneof_case_[47], other->_oneof_case_[47]);
  swap(mcounteren_oneof_, other->mcounteren_oneof_);
  swap(_oneof_case_[48], other->_oneof_case_[48]);
  swap(stvec_oneof_, other->stvec_oneof_);
  swap(_oneof_case_[49], other->_oneof_case_[49]);
  swap(sscratch_oneof_, other->sscratch_oneof_);
  swap(_oneof_case_[50], other->_oneof_case_[50]);
  swap(sepc_oneof_, other->sepc_oneof_);
  swap(_oneof_case_[51], other->_oneof_case_[51]);
  swap(scause_oneof_, other->scause_oneof_);
  swap(_oneof_case_[52], other->_oneof_case_[52]);
  swap(stval_oneof_, other->stval_oneof_);
  swap(_oneof_case_[53], other->_oneof_case_[53]);
  swap(satp_oneof_, other->satp_oneof_);
  swap(_oneof_case_[54], other->_oneof_case_[54]);
  swap(scounteren_oneof_, other->scounteren_oneof_);
  swap(_oneof_case_[55], other->_oneof_case_[55]);
  swap(ilrsc_oneof_, other->ilrsc_oneof_);
  swap(_oneof_case_[56], other->_oneof_case_[56]);
  swap(iflags_oneof_, other->iflags_oneof_);
  swap(_oneof_case_[57], other->_oneof_case_[57]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcessorState::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Processor::InitAsDefaultInstance() {
  ::CartesiCore::_Processor_default_instance_.state_ = const_cast< ::CartesiCore::ProcessorState*>(
      ::CartesiCore::ProcessorState::internal_default_instance());
  ::CartesiCore::_Processor_default_instance_.backing_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Processor::set_allocated_state(::CartesiCore::ProcessorState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_processor_oneof();
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
    processor_oneof_.state_ = state;
  }
  // @@protoc_insertion_point(field_set_allocated:CartesiCore.Processor.state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Processor::kStateFieldNumber;
const int Processor::kBackingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Processor::Processor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Processor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Processor)
}
Processor::Processor(const Processor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_processor_oneof();
  switch (from.processor_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::ProcessorState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case PROCESSOR_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Processor)
}

void Processor::SharedCtor() {
  clear_has_processor_oneof();
}

Processor::~Processor() {
  // @@protoc_insertion_point(destructor:CartesiCore.Processor)
  SharedDtor();
}

void Processor::SharedDtor() {
  if (has_processor_oneof()) {
    clear_processor_oneof();
  }
}

void Processor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Processor::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Processor& Processor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Processor.base);
  return *internal_default_instance();
}


void Processor::clear_processor_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.Processor)
  switch (processor_oneof_case()) {
    case kState: {
      delete processor_oneof_.state_;
      break;
    }
    case kBacking: {
      processor_oneof_.backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PROCESSOR_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROCESSOR_ONEOF_NOT_SET;
}


void Processor::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Processor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_processor_oneof();
  _internal_metadata_.Clear();
}

bool Processor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Processor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.ProcessorState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.Processor.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Processor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Processor)
  return false;
#undef DO_
}

void Processor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Processor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.ProcessorState state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state(), output);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Processor.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->backing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Processor)
}

::google::protobuf::uint8* Processor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Processor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.ProcessorState state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state(), deterministic, target);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Processor.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->backing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Processor)
  return target;
}

size_t Processor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Processor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (processor_oneof_case()) {
    // .CartesiCore.ProcessorState state = 1;
    case kState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *processor_oneof_.state_);
      break;
    }
    // string backing = 2;
    case kBacking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backing());
      break;
    }
    case PROCESSOR_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Processor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Processor)
  GOOGLE_DCHECK_NE(&from, this);
  const Processor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Processor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Processor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Processor)
    MergeFrom(*source);
  }
}

void Processor::MergeFrom(const Processor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Processor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.processor_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::ProcessorState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case PROCESSOR_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Processor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Processor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Processor::CopyFrom(const Processor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Processor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Processor::IsInitialized() const {
  return true;
}

void Processor::Swap(Processor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Processor::InternalSwap(Processor* other) {
  using std::swap;
  swap(processor_oneof_, other->processor_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Processor::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ROM::InitAsDefaultInstance() {
  ::CartesiCore::_ROM_default_instance_.cmdline_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::CartesiCore::_ROM_default_instance_.backing_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROM::kCmdlineFieldNumber;
const int ROM::kBackingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROM::ROM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_ROM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.ROM)
}
ROM::ROM(const ROM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_rom_oneof();
  switch (from.rom_oneof_case()) {
    case kCmdline: {
      set_cmdline(from.cmdline());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case ROM_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.ROM)
}

void ROM::SharedCtor() {
  clear_has_rom_oneof();
}

ROM::~ROM() {
  // @@protoc_insertion_point(destructor:CartesiCore.ROM)
  SharedDtor();
}

void ROM::SharedDtor() {
  if (has_rom_oneof()) {
    clear_rom_oneof();
  }
}

void ROM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ROM::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ROM& ROM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_ROM.base);
  return *internal_default_instance();
}


void ROM::clear_rom_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.ROM)
  switch (rom_oneof_case()) {
    case kCmdline: {
      rom_oneof_.cmdline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBacking: {
      rom_oneof_.backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ROM_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ROM_ONEOF_NOT_SET;
}


void ROM::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.ROM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_rom_oneof();
  _internal_metadata_.Clear();
}

bool ROM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.ROM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cmdline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmdline().data(), static_cast<int>(this->cmdline().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.ROM.cmdline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.ROM.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.ROM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.ROM)
  return false;
#undef DO_
}

void ROM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.ROM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmdline = 1;
  if (has_cmdline()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmdline().data(), static_cast<int>(this->cmdline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.ROM.cmdline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmdline(), output);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.ROM.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->backing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.ROM)
}

::google::protobuf::uint8* ROM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.ROM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmdline = 1;
  if (has_cmdline()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmdline().data(), static_cast<int>(this->cmdline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.ROM.cmdline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmdline(), target);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.ROM.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->backing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.ROM)
  return target;
}

size_t ROM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.ROM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (rom_oneof_case()) {
    // string cmdline = 1;
    case kCmdline: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmdline());
      break;
    }
    // string backing = 2;
    case kBacking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backing());
      break;
    }
    case ROM_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.ROM)
  GOOGLE_DCHECK_NE(&from, this);
  const ROM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ROM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.ROM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.ROM)
    MergeFrom(*source);
  }
}

void ROM::MergeFrom(const ROM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.ROM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.rom_oneof_case()) {
    case kCmdline: {
      set_cmdline(from.cmdline());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case ROM_ONEOF_NOT_SET: {
      break;
    }
  }
}

void ROM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.ROM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROM::CopyFrom(const ROM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.ROM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROM::IsInitialized() const {
  return true;
}

void ROM::Swap(ROM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROM::InternalSwap(ROM* other) {
  using std::swap;
  swap(rom_oneof_, other->rom_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ROM::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RAM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RAM::kIlengthFieldNumber;
const int RAM::kBackingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RAM::RAM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_RAM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.RAM)
}
RAM::RAM(const RAM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  backing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.backing().size() > 0) {
    backing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backing_);
  }
  ilength_ = from.ilength_;
  // @@protoc_insertion_point(copy_constructor:CartesiCore.RAM)
}

void RAM::SharedCtor() {
  backing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ilength_ = GOOGLE_ULONGLONG(0);
}

RAM::~RAM() {
  // @@protoc_insertion_point(destructor:CartesiCore.RAM)
  SharedDtor();
}

void RAM::SharedDtor() {
  backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RAM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RAM::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RAM& RAM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_RAM.base);
  return *internal_default_instance();
}


void RAM::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.RAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ilength_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RAM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.RAM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ilength = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ilength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.RAM.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.RAM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.RAM)
  return false;
#undef DO_
}

void RAM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.RAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ilength = 1;
  if (this->ilength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ilength(), output);
  }

  // string backing = 2;
  if (this->backing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.RAM.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->backing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.RAM)
}

::google::protobuf::uint8* RAM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.RAM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ilength = 1;
  if (this->ilength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ilength(), target);
  }

  // string backing = 2;
  if (this->backing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.RAM.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->backing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.RAM)
  return target;
}

size_t RAM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.RAM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string backing = 2;
  if (this->backing().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->backing());
  }

  // uint64 ilength = 1;
  if (this->ilength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ilength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RAM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.RAM)
  GOOGLE_DCHECK_NE(&from, this);
  const RAM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RAM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.RAM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.RAM)
    MergeFrom(*source);
  }
}

void RAM::MergeFrom(const RAM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.RAM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.backing().size() > 0) {

    backing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backing_);
  }
  if (from.ilength() != 0) {
    set_ilength(from.ilength());
  }
}

void RAM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.RAM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RAM::CopyFrom(const RAM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.RAM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RAM::IsInitialized() const {
  return true;
}

void RAM::Swap(RAM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RAM::InternalSwap(RAM* other) {
  using std::swap;
  backing_.Swap(&other->backing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ilength_, other->ilength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RAM::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Drive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Drive::kIstartFieldNumber;
const int Drive::kIlengthFieldNumber;
const int Drive::kBackingFieldNumber;
const int Drive::kSharedFieldNumber;
const int Drive::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Drive::Drive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Drive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Drive)
}
Drive::Drive(const Drive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  backing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.backing().size() > 0) {
    backing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backing_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&istart_, &from.istart_,
    static_cast<size_t>(reinterpret_cast<char*>(&shared_) -
    reinterpret_cast<char*>(&istart_)) + sizeof(shared_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Drive)
}

void Drive::SharedCtor() {
  backing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&istart_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shared_) -
      reinterpret_cast<char*>(&istart_)) + sizeof(shared_));
}

Drive::~Drive() {
  // @@protoc_insertion_point(destructor:CartesiCore.Drive)
  SharedDtor();
}

void Drive::SharedDtor() {
  backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Drive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Drive::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Drive& Drive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Drive.base);
  return *internal_default_instance();
}


void Drive::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&istart_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shared_) -
      reinterpret_cast<char*>(&istart_)) + sizeof(shared_));
  _internal_metadata_.Clear();
}

bool Drive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Drive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 istart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &istart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ilength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ilength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.Drive.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool shared = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.Drive.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Drive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Drive)
  return false;
#undef DO_
}

void Drive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 istart = 1;
  if (this->istart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->istart(), output);
  }

  // uint64 ilength = 2;
  if (this->ilength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ilength(), output);
  }

  // string backing = 3;
  if (this->backing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Drive.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->backing(), output);
  }

  // bool shared = 4;
  if (this->shared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->shared(), output);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Drive.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Drive)
}

::google::protobuf::uint8* Drive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 istart = 1;
  if (this->istart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->istart(), target);
  }

  // uint64 ilength = 2;
  if (this->ilength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ilength(), target);
  }

  // string backing = 3;
  if (this->backing().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Drive.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->backing(), target);
  }

  // bool shared = 4;
  if (this->shared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->shared(), target);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.Drive.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Drive)
  return target;
}

size_t Drive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Drive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string backing = 3;
  if (this->backing().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->backing());
  }

  // string label = 5;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // uint64 istart = 1;
  if (this->istart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->istart());
  }

  // uint64 ilength = 2;
  if (this->ilength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ilength());
  }

  // bool shared = 4;
  if (this->shared() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Drive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  const Drive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Drive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Drive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Drive)
    MergeFrom(*source);
  }
}

void Drive::MergeFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.backing().size() > 0) {

    backing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backing_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.istart() != 0) {
    set_istart(from.istart());
  }
  if (from.ilength() != 0) {
    set_ilength(from.ilength());
  }
  if (from.shared() != 0) {
    set_shared(from.shared());
  }
}

void Drive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Drive::CopyFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Drive::IsInitialized() const {
  return true;
}

void Drive::Swap(Drive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Drive::InternalSwap(Drive* other) {
  using std::swap;
  backing_.Swap(&other->backing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(istart_, other->istart_);
  swap(ilength_, other->ilength_);
  swap(shared_, other->shared_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Drive::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CLINTState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLINTState::kMtimeFieldNumber;
const int CLINTState::kMtimecmpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLINTState::CLINTState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_CLINTState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.CLINTState)
}
CLINTState::CLINTState(const CLINTState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mtime_, &from.mtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtimecmp_) -
    reinterpret_cast<char*>(&mtime_)) + sizeof(mtimecmp_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.CLINTState)
}

void CLINTState::SharedCtor() {
  ::memset(&mtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtimecmp_) -
      reinterpret_cast<char*>(&mtime_)) + sizeof(mtimecmp_));
}

CLINTState::~CLINTState() {
  // @@protoc_insertion_point(destructor:CartesiCore.CLINTState)
  SharedDtor();
}

void CLINTState::SharedDtor() {
}

void CLINTState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CLINTState::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CLINTState& CLINTState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_CLINTState.base);
  return *internal_default_instance();
}


void CLINTState::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.CLINTState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtimecmp_) -
      reinterpret_cast<char*>(&mtime_)) + sizeof(mtimecmp_));
  _internal_metadata_.Clear();
}

bool CLINTState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.CLINTState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mtime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mtimecmp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mtimecmp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.CLINTState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.CLINTState)
  return false;
#undef DO_
}

void CLINTState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.CLINTState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mtime = 1;
  if (this->mtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mtime(), output);
  }

  // uint64 mtimecmp = 2;
  if (this->mtimecmp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mtimecmp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.CLINTState)
}

::google::protobuf::uint8* CLINTState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.CLINTState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mtime = 1;
  if (this->mtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mtime(), target);
  }

  // uint64 mtimecmp = 2;
  if (this->mtimecmp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mtimecmp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.CLINTState)
  return target;
}

size_t CLINTState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.CLINTState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 mtime = 1;
  if (this->mtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mtime());
  }

  // uint64 mtimecmp = 2;
  if (this->mtimecmp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mtimecmp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLINTState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.CLINTState)
  GOOGLE_DCHECK_NE(&from, this);
  const CLINTState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLINTState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.CLINTState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.CLINTState)
    MergeFrom(*source);
  }
}

void CLINTState::MergeFrom(const CLINTState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.CLINTState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mtime() != 0) {
    set_mtime(from.mtime());
  }
  if (from.mtimecmp() != 0) {
    set_mtimecmp(from.mtimecmp());
  }
}

void CLINTState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.CLINTState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLINTState::CopyFrom(const CLINTState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.CLINTState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLINTState::IsInitialized() const {
  return true;
}

void CLINTState::Swap(CLINTState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLINTState::InternalSwap(CLINTState* other) {
  using std::swap;
  swap(mtime_, other->mtime_);
  swap(mtimecmp_, other->mtimecmp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CLINTState::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CLINT::InitAsDefaultInstance() {
  ::CartesiCore::_CLINT_default_instance_.state_ = const_cast< ::CartesiCore::CLINTState*>(
      ::CartesiCore::CLINTState::internal_default_instance());
  ::CartesiCore::_CLINT_default_instance_.backing_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CLINT::set_allocated_state(::CartesiCore::CLINTState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_clint_oneof();
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
    clint_oneof_.state_ = state;
  }
  // @@protoc_insertion_point(field_set_allocated:CartesiCore.CLINT.state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLINT::kStateFieldNumber;
const int CLINT::kBackingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLINT::CLINT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_CLINT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.CLINT)
}
CLINT::CLINT(const CLINT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_clint_oneof();
  switch (from.clint_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::CLINTState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case CLINT_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.CLINT)
}

void CLINT::SharedCtor() {
  clear_has_clint_oneof();
}

CLINT::~CLINT() {
  // @@protoc_insertion_point(destructor:CartesiCore.CLINT)
  SharedDtor();
}

void CLINT::SharedDtor() {
  if (has_clint_oneof()) {
    clear_clint_oneof();
  }
}

void CLINT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CLINT::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CLINT& CLINT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_CLINT.base);
  return *internal_default_instance();
}


void CLINT::clear_clint_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.CLINT)
  switch (clint_oneof_case()) {
    case kState: {
      delete clint_oneof_.state_;
      break;
    }
    case kBacking: {
      clint_oneof_.backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CLINT_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLINT_ONEOF_NOT_SET;
}


void CLINT::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.CLINT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_clint_oneof();
  _internal_metadata_.Clear();
}

bool CLINT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.CLINT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.CLINTState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.CLINT.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.CLINT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.CLINT)
  return false;
#undef DO_
}

void CLINT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.CLINT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.CLINTState state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state(), output);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.CLINT.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->backing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.CLINT)
}

::google::protobuf::uint8* CLINT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.CLINT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.CLINTState state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state(), deterministic, target);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.CLINT.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->backing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.CLINT)
  return target;
}

size_t CLINT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.CLINT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (clint_oneof_case()) {
    // .CartesiCore.CLINTState state = 1;
    case kState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *clint_oneof_.state_);
      break;
    }
    // string backing = 2;
    case kBacking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backing());
      break;
    }
    case CLINT_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLINT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.CLINT)
  GOOGLE_DCHECK_NE(&from, this);
  const CLINT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLINT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.CLINT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.CLINT)
    MergeFrom(*source);
  }
}

void CLINT::MergeFrom(const CLINT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.CLINT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.clint_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::CLINTState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case CLINT_ONEOF_NOT_SET: {
      break;
    }
  }
}

void CLINT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.CLINT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLINT::CopyFrom(const CLINT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.CLINT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLINT::IsInitialized() const {
  return true;
}

void CLINT::Swap(CLINT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLINT::InternalSwap(CLINT* other) {
  using std::swap;
  swap(clint_oneof_, other->clint_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CLINT::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HTIFState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTIFState::kFromhostFieldNumber;
const int HTIFState::kTohostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTIFState::HTIFState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_HTIFState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.HTIFState)
}
HTIFState::HTIFState(const HTIFState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fromhost_, &from.fromhost_,
    static_cast<size_t>(reinterpret_cast<char*>(&tohost_) -
    reinterpret_cast<char*>(&fromhost_)) + sizeof(tohost_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.HTIFState)
}

void HTIFState::SharedCtor() {
  ::memset(&fromhost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tohost_) -
      reinterpret_cast<char*>(&fromhost_)) + sizeof(tohost_));
}

HTIFState::~HTIFState() {
  // @@protoc_insertion_point(destructor:CartesiCore.HTIFState)
  SharedDtor();
}

void HTIFState::SharedDtor() {
}

void HTIFState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTIFState::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTIFState& HTIFState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_HTIFState.base);
  return *internal_default_instance();
}


void HTIFState::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.HTIFState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fromhost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tohost_) -
      reinterpret_cast<char*>(&fromhost_)) + sizeof(tohost_));
  _internal_metadata_.Clear();
}

bool HTIFState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.HTIFState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fromhost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fromhost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tohost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tohost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.HTIFState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.HTIFState)
  return false;
#undef DO_
}

void HTIFState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.HTIFState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fromhost = 1;
  if (this->fromhost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->fromhost(), output);
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tohost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.HTIFState)
}

::google::protobuf::uint8* HTIFState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.HTIFState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fromhost = 1;
  if (this->fromhost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->fromhost(), target);
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tohost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.HTIFState)
  return target;
}

size_t HTIFState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.HTIFState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 fromhost = 1;
  if (this->fromhost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fromhost());
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tohost());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTIFState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.HTIFState)
  GOOGLE_DCHECK_NE(&from, this);
  const HTIFState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTIFState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.HTIFState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.HTIFState)
    MergeFrom(*source);
  }
}

void HTIFState::MergeFrom(const HTIFState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.HTIFState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fromhost() != 0) {
    set_fromhost(from.fromhost());
  }
  if (from.tohost() != 0) {
    set_tohost(from.tohost());
  }
}

void HTIFState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.HTIFState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTIFState::CopyFrom(const HTIFState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.HTIFState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTIFState::IsInitialized() const {
  return true;
}

void HTIFState::Swap(HTIFState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTIFState::InternalSwap(HTIFState* other) {
  using std::swap;
  swap(fromhost_, other->fromhost_);
  swap(tohost_, other->tohost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTIFState::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HTIF::InitAsDefaultInstance() {
  ::CartesiCore::_HTIF_default_instance_.state_ = const_cast< ::CartesiCore::HTIFState*>(
      ::CartesiCore::HTIFState::internal_default_instance());
  ::CartesiCore::_HTIF_default_instance_.backing_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HTIF::set_allocated_state(::CartesiCore::HTIFState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_htif_oneof();
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
    htif_oneof_.state_ = state;
  }
  // @@protoc_insertion_point(field_set_allocated:CartesiCore.HTIF.state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTIF::kStateFieldNumber;
const int HTIF::kBackingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTIF::HTIF()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_HTIF.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.HTIF)
}
HTIF::HTIF(const HTIF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_htif_oneof();
  switch (from.htif_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::HTIFState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case HTIF_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.HTIF)
}

void HTIF::SharedCtor() {
  clear_has_htif_oneof();
}

HTIF::~HTIF() {
  // @@protoc_insertion_point(destructor:CartesiCore.HTIF)
  SharedDtor();
}

void HTIF::SharedDtor() {
  if (has_htif_oneof()) {
    clear_htif_oneof();
  }
}

void HTIF::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTIF::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTIF& HTIF::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_HTIF.base);
  return *internal_default_instance();
}


void HTIF::clear_htif_oneof() {
// @@protoc_insertion_point(one_of_clear_start:CartesiCore.HTIF)
  switch (htif_oneof_case()) {
    case kState: {
      delete htif_oneof_.state_;
      break;
    }
    case kBacking: {
      htif_oneof_.backing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case HTIF_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HTIF_ONEOF_NOT_SET;
}


void HTIF::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.HTIF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_htif_oneof();
  _internal_metadata_.Clear();
}

bool HTIF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.HTIF)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.HTIFState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string backing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backing()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->backing().data(), static_cast<int>(this->backing().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.HTIF.backing"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.HTIF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.HTIF)
  return false;
#undef DO_
}

void HTIF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.HTIF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.HTIFState state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state(), output);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.HTIF.backing");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->backing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.HTIF)
}

::google::protobuf::uint8* HTIF::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.HTIF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.HTIFState state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state(), deterministic, target);
  }

  // string backing = 2;
  if (has_backing()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->backing().data(), static_cast<int>(this->backing().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.HTIF.backing");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->backing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.HTIF)
  return target;
}

size_t HTIF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.HTIF)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (htif_oneof_case()) {
    // .CartesiCore.HTIFState state = 1;
    case kState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *htif_oneof_.state_);
      break;
    }
    // string backing = 2;
    case kBacking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backing());
      break;
    }
    case HTIF_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTIF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.HTIF)
  GOOGLE_DCHECK_NE(&from, this);
  const HTIF* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTIF>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.HTIF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.HTIF)
    MergeFrom(*source);
  }
}

void HTIF::MergeFrom(const HTIF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.HTIF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.htif_oneof_case()) {
    case kState: {
      mutable_state()->::CartesiCore::HTIFState::MergeFrom(from.state());
      break;
    }
    case kBacking: {
      set_backing(from.backing());
      break;
    }
    case HTIF_ONEOF_NOT_SET: {
      break;
    }
  }
}

void HTIF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.HTIF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTIF::CopyFrom(const HTIF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.HTIF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTIF::IsInitialized() const {
  return true;
}

void HTIF::Swap(HTIF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTIF::InternalSwap(HTIF* other) {
  using std::swap;
  swap(htif_oneof_, other->htif_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTIF::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MachineRequest::InitAsDefaultInstance() {
  ::CartesiCore::_MachineRequest_default_instance_._instance.get_mutable()->processor_ = const_cast< ::CartesiCore::Processor*>(
      ::CartesiCore::Processor::internal_default_instance());
  ::CartesiCore::_MachineRequest_default_instance_._instance.get_mutable()->rom_ = const_cast< ::CartesiCore::ROM*>(
      ::CartesiCore::ROM::internal_default_instance());
  ::CartesiCore::_MachineRequest_default_instance_._instance.get_mutable()->ram_ = const_cast< ::CartesiCore::RAM*>(
      ::CartesiCore::RAM::internal_default_instance());
  ::CartesiCore::_MachineRequest_default_instance_._instance.get_mutable()->clint_ = const_cast< ::CartesiCore::CLINT*>(
      ::CartesiCore::CLINT::internal_default_instance());
  ::CartesiCore::_MachineRequest_default_instance_._instance.get_mutable()->htif_ = const_cast< ::CartesiCore::HTIF*>(
      ::CartesiCore::HTIF::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MachineRequest::kProcessorFieldNumber;
const int MachineRequest::kRomFieldNumber;
const int MachineRequest::kRamFieldNumber;
const int MachineRequest::kFlashFieldNumber;
const int MachineRequest::kClintFieldNumber;
const int MachineRequest::kHtifFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MachineRequest::MachineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_MachineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.MachineRequest)
}
MachineRequest::MachineRequest(const MachineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flash_(from.flash_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_processor()) {
    processor_ = new ::CartesiCore::Processor(*from.processor_);
  } else {
    processor_ = NULL;
  }
  if (from.has_rom()) {
    rom_ = new ::CartesiCore::ROM(*from.rom_);
  } else {
    rom_ = NULL;
  }
  if (from.has_ram()) {
    ram_ = new ::CartesiCore::RAM(*from.ram_);
  } else {
    ram_ = NULL;
  }
  if (from.has_clint()) {
    clint_ = new ::CartesiCore::CLINT(*from.clint_);
  } else {
    clint_ = NULL;
  }
  if (from.has_htif()) {
    htif_ = new ::CartesiCore::HTIF(*from.htif_);
  } else {
    htif_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CartesiCore.MachineRequest)
}

void MachineRequest::SharedCtor() {
  ::memset(&processor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&htif_) -
      reinterpret_cast<char*>(&processor_)) + sizeof(htif_));
}

MachineRequest::~MachineRequest() {
  // @@protoc_insertion_point(destructor:CartesiCore.MachineRequest)
  SharedDtor();
}

void MachineRequest::SharedDtor() {
  if (this != internal_default_instance()) delete processor_;
  if (this != internal_default_instance()) delete rom_;
  if (this != internal_default_instance()) delete ram_;
  if (this != internal_default_instance()) delete clint_;
  if (this != internal_default_instance()) delete htif_;
}

void MachineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MachineRequest::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MachineRequest& MachineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_MachineRequest.base);
  return *internal_default_instance();
}


void MachineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.MachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flash_.Clear();
  if (GetArenaNoVirtual() == NULL && processor_ != NULL) {
    delete processor_;
  }
  processor_ = NULL;
  if (GetArenaNoVirtual() == NULL && rom_ != NULL) {
    delete rom_;
  }
  rom_ = NULL;
  if (GetArenaNoVirtual() == NULL && ram_ != NULL) {
    delete ram_;
  }
  ram_ = NULL;
  if (GetArenaNoVirtual() == NULL && clint_ != NULL) {
    delete clint_;
  }
  clint_ = NULL;
  if (GetArenaNoVirtual() == NULL && htif_ != NULL) {
    delete htif_;
  }
  htif_ = NULL;
  _internal_metadata_.Clear();
}

bool MachineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.MachineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.Processor processor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_processor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.ROM rom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.RAM ram = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CartesiCore.Drive flash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.CLINT clint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.HTIF htif = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_htif()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.MachineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.MachineRequest)
  return false;
#undef DO_
}

void MachineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.MachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.Processor processor = 1;
  if (this->has_processor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_processor(), output);
  }

  // .CartesiCore.ROM rom = 2;
  if (this->has_rom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rom(), output);
  }

  // .CartesiCore.RAM ram = 3;
  if (this->has_ram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ram(), output);
  }

  // repeated .CartesiCore.Drive flash = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->flash(static_cast<int>(i)),
      output);
  }

  // .CartesiCore.CLINT clint = 5;
  if (this->has_clint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_clint(), output);
  }

  // .CartesiCore.HTIF htif = 6;
  if (this->has_htif()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_htif(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.MachineRequest)
}

::google::protobuf::uint8* MachineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.MachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.Processor processor = 1;
  if (this->has_processor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_processor(), deterministic, target);
  }

  // .CartesiCore.ROM rom = 2;
  if (this->has_rom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rom(), deterministic, target);
  }

  // .CartesiCore.RAM ram = 3;
  if (this->has_ram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ram(), deterministic, target);
  }

  // repeated .CartesiCore.Drive flash = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->flash(static_cast<int>(i)), deterministic, target);
  }

  // .CartesiCore.CLINT clint = 5;
  if (this->has_clint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_clint(), deterministic, target);
  }

  // .CartesiCore.HTIF htif = 6;
  if (this->has_htif()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_htif(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.MachineRequest)
  return target;
}

size_t MachineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.MachineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CartesiCore.Drive flash = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash(static_cast<int>(i)));
    }
  }

  // .CartesiCore.Processor processor = 1;
  if (this->has_processor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *processor_);
  }

  // .CartesiCore.ROM rom = 2;
  if (this->has_rom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rom_);
  }

  // .CartesiCore.RAM ram = 3;
  if (this->has_ram()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ram_);
  }

  // .CartesiCore.CLINT clint = 5;
  if (this->has_clint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clint_);
  }

  // .CartesiCore.HTIF htif = 6;
  if (this->has_htif()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *htif_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MachineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.MachineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MachineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MachineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.MachineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.MachineRequest)
    MergeFrom(*source);
  }
}

void MachineRequest::MergeFrom(const MachineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.MachineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flash_.MergeFrom(from.flash_);
  if (from.has_processor()) {
    mutable_processor()->::CartesiCore::Processor::MergeFrom(from.processor());
  }
  if (from.has_rom()) {
    mutable_rom()->::CartesiCore::ROM::MergeFrom(from.rom());
  }
  if (from.has_ram()) {
    mutable_ram()->::CartesiCore::RAM::MergeFrom(from.ram());
  }
  if (from.has_clint()) {
    mutable_clint()->::CartesiCore::CLINT::MergeFrom(from.clint());
  }
  if (from.has_htif()) {
    mutable_htif()->::CartesiCore::HTIF::MergeFrom(from.htif());
  }
}

void MachineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.MachineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MachineRequest::CopyFrom(const MachineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.MachineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MachineRequest::IsInitialized() const {
  return true;
}

void MachineRequest::Swap(MachineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MachineRequest::InternalSwap(MachineRequest* other) {
  using std::swap;
  CastToBase(&flash_)->InternalSwap(CastToBase(&other->flash_));
  swap(processor_, other->processor_);
  swap(rom_, other->rom_);
  swap(ram_, other->ram_);
  swap(clint_, other->clint_);
  swap(htif_, other->htif_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MachineRequest::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunRequest::RunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_RunRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.RunRequest)
}
RunRequest::RunRequest(const RunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:CartesiCore.RunRequest)
}

void RunRequest::SharedCtor() {
  limit_ = GOOGLE_ULONGLONG(0);
}

RunRequest::~RunRequest() {
  // @@protoc_insertion_point(destructor:CartesiCore.RunRequest)
  SharedDtor();
}

void RunRequest::SharedDtor() {
}

void RunRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunRequest::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunRequest& RunRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_RunRequest.base);
  return *internal_default_instance();
}


void RunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.RunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  limit_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.RunRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 limit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.RunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.RunRequest)
  return false;
#undef DO_
}

void RunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.RunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 limit = 1;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.RunRequest)
}

::google::protobuf::uint8* RunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.RunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 limit = 1;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.RunRequest)
  return target;
}

size_t RunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.RunRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 limit = 1;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.RunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.RunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.RunRequest)
    MergeFrom(*source);
  }
}

void RunRequest::MergeFrom(const RunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.RunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void RunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.RunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunRequest::CopyFrom(const RunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.RunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunRequest::IsInitialized() const {
  return true;
}

void RunRequest::Swap(RunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunRequest::InternalSwap(RunRequest* other) {
  using std::swap;
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunRequest::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunResponse::kMcycleFieldNumber;
const int RunResponse::kTohostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunResponse::RunResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_RunResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.RunResponse)
}
RunResponse::RunResponse(const RunResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mcycle_, &from.mcycle_,
    static_cast<size_t>(reinterpret_cast<char*>(&tohost_) -
    reinterpret_cast<char*>(&mcycle_)) + sizeof(tohost_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.RunResponse)
}

void RunResponse::SharedCtor() {
  ::memset(&mcycle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tohost_) -
      reinterpret_cast<char*>(&mcycle_)) + sizeof(tohost_));
}

RunResponse::~RunResponse() {
  // @@protoc_insertion_point(destructor:CartesiCore.RunResponse)
  SharedDtor();
}

void RunResponse::SharedDtor() {
}

void RunResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RunResponse::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunResponse& RunResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_RunResponse.base);
  return *internal_default_instance();
}


void RunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.RunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mcycle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tohost_) -
      reinterpret_cast<char*>(&mcycle_)) + sizeof(tohost_));
  _internal_metadata_.Clear();
}

bool RunResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.RunResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mcycle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mcycle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tohost = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tohost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.RunResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.RunResponse)
  return false;
#undef DO_
}

void RunResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.RunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mcycle = 1;
  if (this->mcycle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mcycle(), output);
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tohost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.RunResponse)
}

::google::protobuf::uint8* RunResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.RunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mcycle = 1;
  if (this->mcycle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mcycle(), target);
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tohost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.RunResponse)
  return target;
}

size_t RunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.RunResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 mcycle = 1;
  if (this->mcycle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mcycle());
  }

  // uint64 tohost = 2;
  if (this->tohost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tohost());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RunResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.RunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.RunResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.RunResponse)
    MergeFrom(*source);
  }
}

void RunResponse::MergeFrom(const RunResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.RunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mcycle() != 0) {
    set_mcycle(from.mcycle());
  }
  if (from.tohost() != 0) {
    set_tohost(from.tohost());
  }
}

void RunResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.RunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunResponse::CopyFrom(const RunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.RunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunResponse::IsInitialized() const {
  return true;
}

void RunResponse::Swap(RunResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunResponse::InternalSwap(RunResponse* other) {
  using std::swap;
  swap(mcycle_, other->mcycle_);
  swap(tohost_, other->tohost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RunResponse::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Proof::InitAsDefaultInstance() {
  ::CartesiCore::_Proof_default_instance_._instance.get_mutable()->target_hash_ = const_cast< ::CartesiCore::Hash*>(
      ::CartesiCore::Hash::internal_default_instance());
  ::CartesiCore::_Proof_default_instance_._instance.get_mutable()->root_hash_ = const_cast< ::CartesiCore::Hash*>(
      ::CartesiCore::Hash::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proof::kAddressFieldNumber;
const int Proof::kLog2SizeFieldNumber;
const int Proof::kTargetHashFieldNumber;
const int Proof::kSiblingHashesFieldNumber;
const int Proof::kRootHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proof::Proof()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Proof.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Proof)
}
Proof::Proof(const Proof& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sibling_hashes_(from.sibling_hashes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_hash()) {
    target_hash_ = new ::CartesiCore::Hash(*from.target_hash_);
  } else {
    target_hash_ = NULL;
  }
  if (from.has_root_hash()) {
    root_hash_ = new ::CartesiCore::Hash(*from.root_hash_);
  } else {
    root_hash_ = NULL;
  }
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&log2_size_) -
    reinterpret_cast<char*>(&address_)) + sizeof(log2_size_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Proof)
}

void Proof::SharedCtor() {
  ::memset(&target_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log2_size_) -
      reinterpret_cast<char*>(&target_hash_)) + sizeof(log2_size_));
}

Proof::~Proof() {
  // @@protoc_insertion_point(destructor:CartesiCore.Proof)
  SharedDtor();
}

void Proof::SharedDtor() {
  if (this != internal_default_instance()) delete target_hash_;
  if (this != internal_default_instance()) delete root_hash_;
}

void Proof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Proof::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Proof& Proof::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Proof.base);
  return *internal_default_instance();
}


void Proof::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sibling_hashes_.Clear();
  if (GetArenaNoVirtual() == NULL && target_hash_ != NULL) {
    delete target_hash_;
  }
  target_hash_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_hash_ != NULL) {
    delete root_hash_;
  }
  root_hash_ = NULL;
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log2_size_) -
      reinterpret_cast<char*>(&address_)) + sizeof(log2_size_));
  _internal_metadata_.Clear();
}

bool Proof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Proof)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 log2_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &log2_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.Hash target_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CartesiCore.Hash sibling_hashes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sibling_hashes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.Hash root_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Proof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Proof)
  return false;
#undef DO_
}

void Proof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->address(), output);
  }

  // uint32 log2_size = 2;
  if (this->log2_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->log2_size(), output);
  }

  // .CartesiCore.Hash target_hash = 3;
  if (this->has_target_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_target_hash(), output);
  }

  // repeated .CartesiCore.Hash sibling_hashes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sibling_hashes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->sibling_hashes(static_cast<int>(i)),
      output);
  }

  // .CartesiCore.Hash root_hash = 5;
  if (this->has_root_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_root_hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Proof)
}

::google::protobuf::uint8* Proof::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->address(), target);
  }

  // uint32 log2_size = 2;
  if (this->log2_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->log2_size(), target);
  }

  // .CartesiCore.Hash target_hash = 3;
  if (this->has_target_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_target_hash(), deterministic, target);
  }

  // repeated .CartesiCore.Hash sibling_hashes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sibling_hashes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->sibling_hashes(static_cast<int>(i)), deterministic, target);
  }

  // .CartesiCore.Hash root_hash = 5;
  if (this->has_root_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_root_hash(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Proof)
  return target;
}

size_t Proof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Proof)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CartesiCore.Hash sibling_hashes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->sibling_hashes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sibling_hashes(static_cast<int>(i)));
    }
  }

  // .CartesiCore.Hash target_hash = 3;
  if (this->has_target_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_hash_);
  }

  // .CartesiCore.Hash root_hash = 5;
  if (this->has_root_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *root_hash_);
  }

  // uint64 address = 1;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->address());
  }

  // uint32 log2_size = 2;
  if (this->log2_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->log2_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  const Proof* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Proof>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Proof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Proof)
    MergeFrom(*source);
  }
}

void Proof::MergeFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sibling_hashes_.MergeFrom(from.sibling_hashes_);
  if (from.has_target_hash()) {
    mutable_target_hash()->::CartesiCore::Hash::MergeFrom(from.target_hash());
  }
  if (from.has_root_hash()) {
    mutable_root_hash()->::CartesiCore::Hash::MergeFrom(from.root_hash());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.log2_size() != 0) {
    set_log2_size(from.log2_size());
  }
}

void Proof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proof::CopyFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proof::IsInitialized() const {
  return true;
}

void Proof::Swap(Proof* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proof::InternalSwap(Proof* other) {
  using std::swap;
  CastToBase(&sibling_hashes_)->InternalSwap(CastToBase(&other->sibling_hashes_));
  swap(target_hash_, other->target_hash_);
  swap(root_hash_, other->root_hash_);
  swap(address_, other->address_);
  swap(log2_size_, other->log2_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Proof::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Access::InitAsDefaultInstance() {
  ::CartesiCore::_Access_default_instance_._instance.get_mutable()->proof_ = const_cast< ::CartesiCore::Proof*>(
      ::CartesiCore::Proof::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Access::kOperationFieldNumber;
const int Access::kReadFieldNumber;
const int Access::kWrittenFieldNumber;
const int Access::kProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Access::Access()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_Access.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.Access)
}
Access::Access(const Access& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_proof()) {
    proof_ = new ::CartesiCore::Proof(*from.proof_);
  } else {
    proof_ = NULL;
  }
  ::memcpy(&read_, &from.read_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&read_)) + sizeof(operation_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.Access)
}

void Access::SharedCtor() {
  ::memset(&proof_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_) -
      reinterpret_cast<char*>(&proof_)) + sizeof(operation_));
}

Access::~Access() {
  // @@protoc_insertion_point(destructor:CartesiCore.Access)
  SharedDtor();
}

void Access::SharedDtor() {
  if (this != internal_default_instance()) delete proof_;
}

void Access::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Access::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Access& Access::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_Access.base);
  return *internal_default_instance();
}


void Access::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && proof_ != NULL) {
    delete proof_;
  }
  proof_ = NULL;
  ::memset(&read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_) -
      reinterpret_cast<char*>(&read_)) + sizeof(operation_));
  _internal_metadata_.Clear();
}

bool Access::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.Access)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.AccessOperation operation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation(static_cast< ::CartesiCore::AccessOperation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 read = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 written = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &written_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CartesiCore.Proof proof = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.Access)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.Access)
  return false;
#undef DO_
}

void Access::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.AccessOperation operation = 1;
  if (this->operation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operation(), output);
  }

  // uint64 read = 2;
  if (this->read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->read(), output);
  }

  // uint64 written = 3;
  if (this->written() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->written(), output);
  }

  // .CartesiCore.Proof proof = 4;
  if (this->has_proof()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_proof(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.Access)
}

::google::protobuf::uint8* Access::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.AccessOperation operation = 1;
  if (this->operation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operation(), target);
  }

  // uint64 read = 2;
  if (this->read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->read(), target);
  }

  // uint64 written = 3;
  if (this->written() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->written(), target);
  }

  // .CartesiCore.Proof proof = 4;
  if (this->has_proof()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_proof(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.Access)
  return target;
}

size_t Access::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.Access)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CartesiCore.Proof proof = 4;
  if (this->has_proof()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // uint64 read = 2;
  if (this->read() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->read());
  }

  // uint64 written = 3;
  if (this->written() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->written());
  }

  // .CartesiCore.AccessOperation operation = 1;
  if (this->operation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Access::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.Access)
  GOOGLE_DCHECK_NE(&from, this);
  const Access* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Access>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.Access)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.Access)
    MergeFrom(*source);
  }
}

void Access::MergeFrom(const Access& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.Access)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_proof()) {
    mutable_proof()->::CartesiCore::Proof::MergeFrom(from.proof());
  }
  if (from.read() != 0) {
    set_read(from.read());
  }
  if (from.written() != 0) {
    set_written(from.written());
  }
  if (from.operation() != 0) {
    set_operation(from.operation());
  }
}

void Access::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.Access)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Access::CopyFrom(const Access& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.Access)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Access::IsInitialized() const {
  return true;
}

void Access::Swap(Access* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Access::InternalSwap(Access* other) {
  using std::swap;
  swap(proof_, other->proof_);
  swap(read_, other->read_);
  swap(written_, other->written_);
  swap(operation_, other->operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Access::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BracketNote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BracketNote::kTypeFieldNumber;
const int BracketNote::kWhereFieldNumber;
const int BracketNote::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BracketNote::BracketNote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_BracketNote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.BracketNote)
}
BracketNote::BracketNote(const BracketNote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&where_, &from.where_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&where_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CartesiCore.BracketNote)
}

void BracketNote::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&where_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&where_)) + sizeof(type_));
}

BracketNote::~BracketNote() {
  // @@protoc_insertion_point(destructor:CartesiCore.BracketNote)
  SharedDtor();
}

void BracketNote::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BracketNote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BracketNote::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BracketNote& BracketNote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_BracketNote.base);
  return *internal_default_instance();
}


void BracketNote::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.BracketNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&where_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&where_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool BracketNote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.BracketNote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CartesiCore.BracketNote.BracketNoteType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::CartesiCore::BracketNote_BracketNoteType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 where = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &where_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.BracketNote.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.BracketNote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.BracketNote)
  return false;
#undef DO_
}

void BracketNote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.BracketNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.BracketNote.BracketNoteType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 where = 2;
  if (this->where() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->where(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.BracketNote.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.BracketNote)
}

::google::protobuf::uint8* BracketNote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.BracketNote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CartesiCore.BracketNote.BracketNoteType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 where = 2;
  if (this->where() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->where(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.BracketNote.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.BracketNote)
  return target;
}

size_t BracketNote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.BracketNote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // uint64 where = 2;
  if (this->where() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->where());
  }

  // .CartesiCore.BracketNote.BracketNoteType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BracketNote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.BracketNote)
  GOOGLE_DCHECK_NE(&from, this);
  const BracketNote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BracketNote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.BracketNote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.BracketNote)
    MergeFrom(*source);
  }
}

void BracketNote::MergeFrom(const BracketNote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.BracketNote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.where() != 0) {
    set_where(from.where());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void BracketNote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.BracketNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BracketNote::CopyFrom(const BracketNote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.BracketNote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BracketNote::IsInitialized() const {
  return true;
}

void BracketNote::Swap(BracketNote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BracketNote::InternalSwap(BracketNote* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(where_, other->where_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BracketNote::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccessLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessLog::kAccessesFieldNumber;
const int AccessLog::kBracketsFieldNumber;
const int AccessLog::kNotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessLog::AccessLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cartesi_2dbase_2eproto::scc_info_AccessLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CartesiCore.AccessLog)
}
AccessLog::AccessLog(const AccessLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      accesses_(from.accesses_),
      brackets_(from.brackets_),
      notes_(from.notes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CartesiCore.AccessLog)
}

void AccessLog::SharedCtor() {
}

AccessLog::~AccessLog() {
  // @@protoc_insertion_point(destructor:CartesiCore.AccessLog)
  SharedDtor();
}

void AccessLog::SharedDtor() {
}

void AccessLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccessLog::descriptor() {
  ::protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccessLog& AccessLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cartesi_2dbase_2eproto::scc_info_AccessLog.base);
  return *internal_default_instance();
}


void AccessLog::Clear() {
// @@protoc_insertion_point(message_clear_start:CartesiCore.AccessLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accesses_.Clear();
  brackets_.Clear();
  notes_.Clear();
  _internal_metadata_.Clear();
}

bool AccessLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CartesiCore.AccessLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CartesiCore.Access accesses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accesses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CartesiCore.BracketNote brackets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brackets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string notes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_notes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notes(this->notes_size() - 1).data(),
            static_cast<int>(this->notes(this->notes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CartesiCore.AccessLog.notes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CartesiCore.AccessLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CartesiCore.AccessLog)
  return false;
#undef DO_
}

void AccessLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CartesiCore.AccessLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CartesiCore.Access accesses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accesses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->accesses(static_cast<int>(i)),
      output);
  }

  // repeated .CartesiCore.BracketNote brackets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brackets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->brackets(static_cast<int>(i)),
      output);
  }

  // repeated string notes = 3;
  for (int i = 0, n = this->notes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notes(i).data(), static_cast<int>(this->notes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.AccessLog.notes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->notes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CartesiCore.AccessLog)
}

::google::protobuf::uint8* AccessLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CartesiCore.AccessLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CartesiCore.Access accesses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accesses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->accesses(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CartesiCore.BracketNote brackets = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brackets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->brackets(static_cast<int>(i)), deterministic, target);
  }

  // repeated string notes = 3;
  for (int i = 0, n = this->notes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notes(i).data(), static_cast<int>(this->notes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CartesiCore.AccessLog.notes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->notes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CartesiCore.AccessLog)
  return target;
}

size_t AccessLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CartesiCore.AccessLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CartesiCore.Access accesses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->accesses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accesses(static_cast<int>(i)));
    }
  }

  // repeated .CartesiCore.BracketNote brackets = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->brackets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brackets(static_cast<int>(i)));
    }
  }

  // repeated string notes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->notes_size());
  for (int i = 0, n = this->notes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->notes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CartesiCore.AccessLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccessLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CartesiCore.AccessLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CartesiCore.AccessLog)
    MergeFrom(*source);
  }
}

void AccessLog::MergeFrom(const AccessLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CartesiCore.AccessLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accesses_.MergeFrom(from.accesses_);
  brackets_.MergeFrom(from.brackets_);
  notes_.MergeFrom(from.notes_);
}

void AccessLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CartesiCore.AccessLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessLog::CopyFrom(const AccessLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CartesiCore.AccessLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessLog::IsInitialized() const {
  return true;
}

void AccessLog::Swap(AccessLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessLog::InternalSwap(AccessLog* other) {
  using std::swap;
  CastToBase(&accesses_)->InternalSwap(CastToBase(&other->accesses_));
  CastToBase(&brackets_)->InternalSwap(CastToBase(&other->brackets_));
  notes_.InternalSwap(CastToBase(&other->notes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccessLog::GetMetadata() const {
  protobuf_cartesi_2dbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cartesi_2dbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CartesiCore
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Void* Arena::CreateMaybeMessage< ::CartesiCore::Void >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Void >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Hash* Arena::CreateMaybeMessage< ::CartesiCore::Hash >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Hash >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::ProcessorState* Arena::CreateMaybeMessage< ::CartesiCore::ProcessorState >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::ProcessorState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Processor* Arena::CreateMaybeMessage< ::CartesiCore::Processor >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Processor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::ROM* Arena::CreateMaybeMessage< ::CartesiCore::ROM >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::ROM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::RAM* Arena::CreateMaybeMessage< ::CartesiCore::RAM >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::RAM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Drive* Arena::CreateMaybeMessage< ::CartesiCore::Drive >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Drive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::CLINTState* Arena::CreateMaybeMessage< ::CartesiCore::CLINTState >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::CLINTState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::CLINT* Arena::CreateMaybeMessage< ::CartesiCore::CLINT >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::CLINT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::HTIFState* Arena::CreateMaybeMessage< ::CartesiCore::HTIFState >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::HTIFState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::HTIF* Arena::CreateMaybeMessage< ::CartesiCore::HTIF >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::HTIF >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::MachineRequest* Arena::CreateMaybeMessage< ::CartesiCore::MachineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::MachineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::RunRequest* Arena::CreateMaybeMessage< ::CartesiCore::RunRequest >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::RunRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::RunResponse* Arena::CreateMaybeMessage< ::CartesiCore::RunResponse >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::RunResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Proof* Arena::CreateMaybeMessage< ::CartesiCore::Proof >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Proof >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::Access* Arena::CreateMaybeMessage< ::CartesiCore::Access >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::Access >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::BracketNote* Arena::CreateMaybeMessage< ::CartesiCore::BracketNote >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::BracketNote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CartesiCore::AccessLog* Arena::CreateMaybeMessage< ::CartesiCore::AccessLog >(Arena* arena) {
  return Arena::CreateInternal< ::CartesiCore::AccessLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
